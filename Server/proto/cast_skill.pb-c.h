/* Generated by the protocol buffer compiler.  DO NOT EDIT! */

#ifndef PROTOBUF_C_cast_5fskill_2eproto__INCLUDED
#define PROTOBUF_C_cast_5fskill_2eproto__INCLUDED

#include <google/protobuf-c/protobuf-c.h>

PROTOBUF_C_BEGIN_DECLS

#include "comm_message.pb-c.h"

typedef struct _SkillCastRequest SkillCastRequest;
typedef struct _SkillCastNotify SkillCastNotify;
typedef struct _SkillHitRequest SkillHitRequest;
typedef struct _SkillHitEffect SkillHitEffect;
typedef struct _SkillHitNotify SkillHitNotify;
typedef struct _SkillCallAttackRequest SkillCallAttackRequest;
typedef struct _SkillCallAttackNotify SkillCallAttackNotify;
typedef struct _SkillHitImmediateNotify SkillHitImmediateNotify;
typedef struct _SkillMoveRequest SkillMoveRequest;
typedef struct _SkillMoveNotify SkillMoveNotify;
typedef struct _AddBuffNotify AddBuffNotify;
typedef struct _SkillData SkillData;
typedef struct _SkillList SkillList;
typedef struct _LearnSkillReq LearnSkillReq;
typedef struct _LearnSkillAns LearnSkillAns;
typedef struct _Fuwen Fuwen;
typedef struct _FuwenAns FuwenAns;
typedef struct _BuffStateChangedNotify BuffStateChangedNotify;
typedef struct _LearnLiveReq LearnLiveReq;
typedef struct _AnsLiveSkill AnsLiveSkill;
typedef struct _AnsLearnLiveSkill AnsLearnLiveSkill;


/* --- enums --- */

typedef enum _LIVESKILLTYPE {
  LIVE__SKILL__TYPE__MEDICINE = 1,
  LIVE__SKILL__TYPE__COOK = 2
} LIVESKILLTYPE;

/* --- messages --- */

struct  _SkillCastRequest
{
  ProtobufCMessage base;
  uint32_t skillid;
  PosData *cur_pos;
  float direct_x;
  float direct_z;
};
#define SKILL_CAST_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&skill_cast_request__descriptor) \
    , 0, NULL, 0, 0 }


struct  _SkillCastNotify
{
  ProtobufCMessage base;
  uint64_t playerid;
  uint32_t skillid;
  PosData *cur_pos;
  float direct_x;
  float direct_z;
  PosData *target_pos;
};
#define SKILL_CAST_NOTIFY__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&skill_cast_notify__descriptor) \
    , 0, 0, NULL, 0, 0, NULL }


struct  _SkillHitRequest
{
  ProtobufCMessage base;
  PosData *attack_pos;
  size_t n_target_playerid;
  uint64_t *target_playerid;
  size_t n_target_pos;
  PosData **target_pos;
};
#define SKILL_HIT_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&skill_hit_request__descriptor) \
    , NULL, 0,NULL, 0,NULL }


struct  _SkillHitEffect
{
  ProtobufCMessage base;
  uint64_t playerid;
  int32_t hp_delta;
  int32_t cur_hp;
  uint32_t effect;
  size_t n_add_buff;
  uint32_t *add_buff;
  PosData *target_pos;
};
#define SKILL_HIT_EFFECT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&skill_hit_effect__descriptor) \
    , 0, 0, 0, 0, 0,NULL, NULL }


struct  _SkillHitNotify
{
  ProtobufCMessage base;
  uint64_t playerid;
  uint64_t owneriid;
  char *ownername;
  uint32_t skillid;
  PosData *attack_pos;
  uint32_t life_steal;
  uint32_t damage_return;
  int32_t attack_cur_hp;
  size_t n_target_player;
  SkillHitEffect **target_player;
};
#define SKILL_HIT_NOTIFY__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&skill_hit_notify__descriptor) \
    , 0, 0, NULL, 0, NULL, 0, 0, 0, 0,NULL }


struct  _SkillCallAttackRequest
{
  ProtobufCMessage base;
  PosData *attack_pos;
  uint32_t skillid;
  size_t n_target_playerid;
  uint64_t *target_playerid;
  size_t n_target_pos;
  PosData **target_pos;
  size_t n_hit_index;
  int32_t *hit_index;
};
#define SKILL_CALL_ATTACK_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&skill_call_attack_request__descriptor) \
    , NULL, 0, 0,NULL, 0,NULL, 0,NULL }


struct  _SkillCallAttackNotify
{
  ProtobufCMessage base;
  uint64_t playerid;
  uint32_t skillid;
  PosData *attack_pos;
  uint32_t life_steal;
  uint32_t damage_return;
  int32_t attack_cur_hp;
  size_t n_target_player;
  SkillHitEffect **target_player;
  size_t n_hit_index;
  int32_t *hit_index;
};
#define SKILL_CALL_ATTACK_NOTIFY__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&skill_call_attack_notify__descriptor) \
    , 0, 0, NULL, 0, 0, 0, 0,NULL, 0,NULL }


struct  _SkillHitImmediateNotify
{
  ProtobufCMessage base;
  uint64_t playerid;
  uint64_t owneriid;
  char *ownername;
  uint32_t skillid;
  PosData *attack_pos;
  uint32_t life_steal;
  uint32_t damage_return;
  int32_t attack_cur_hp;
  SkillHitEffect *target_player;
};
#define SKILL_HIT_IMMEDIATE_NOTIFY__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&skill_hit_immediate_notify__descriptor) \
    , 0, 0, NULL, 0, NULL, 0, 0, 0, NULL }


struct  _SkillMoveRequest
{
  ProtobufCMessage base;
  PosData *cur_pos;
};
#define SKILL_MOVE_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&skill_move_request__descriptor) \
    , NULL }


struct  _SkillMoveNotify
{
  ProtobufCMessage base;
  uint64_t playerid;
  PosData *cur_pos;
};
#define SKILL_MOVE_NOTIFY__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&skill_move_notify__descriptor) \
    , 0, NULL }


struct  _AddBuffNotify
{
  ProtobufCMessage base;
  uint64_t playerid;
  uint32_t buff_id;
  uint32_t start_time;
};
#define ADD_BUFF_NOTIFY__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&add_buff_notify__descriptor) \
    , 0, 0, 0 }


struct  _SkillData
{
  ProtobufCMessage base;
  uint32_t id;
  uint32_t lv;
  size_t n_fuwen;
  uint32_t *fuwen;
  uint32_t cur_fuwen;
};
#define SKILL_DATA__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&skill_data__descriptor) \
    , 0, 0, 0,NULL, 0 }


struct  _SkillList
{
  ProtobufCMessage base;
  size_t n_data;
  SkillData **data;
};
#define SKILL_LIST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&skill_list__descriptor) \
    , 0,NULL }


struct  _LearnSkillReq
{
  ProtobufCMessage base;
  uint32_t id;
  uint32_t num;
  protobuf_c_boolean autoup;
};
#define LEARN_SKILL_REQ__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&learn_skill_req__descriptor) \
    , 0, 0, 0 }


struct  _LearnSkillAns
{
  ProtobufCMessage base;
  uint32_t id;
  uint32_t lv;
  int32_t ret;
};
#define LEARN_SKILL_ANS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&learn_skill_ans__descriptor) \
    , 0, 0, 0 }


struct  _Fuwen
{
  ProtobufCMessage base;
  uint32_t fuwen;
  uint32_t skill;
};
#define FUWEN__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&fuwen__descriptor) \
    , 0, 0 }


struct  _FuwenAns
{
  ProtobufCMessage base;
  uint32_t fuwen;
  int32_t ret;
  uint32_t skill;
};
#define FUWEN_ANS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&fuwen_ans__descriptor) \
    , 0, 0, 0 }


struct  _BuffStateChangedNotify
{
  ProtobufCMessage base;
  uint64_t player_id;
  uint32_t buff_state;
};
#define BUFF_STATE_CHANGED_NOTIFY__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&buff_state_changed_notify__descriptor) \
    , 0, 0 }


struct  _LearnLiveReq
{
  ProtobufCMessage base;
  uint32_t type;
  uint32_t num;
};
#define LEARN_LIVE_REQ__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&learn_live_req__descriptor) \
    , 0, 0 }


struct  _AnsLiveSkill
{
  ProtobufCMessage base;
  size_t n_level;
  uint32_t *level;
  size_t n_exp;
  uint32_t *exp;
  size_t n_broken;
  uint32_t *broken;
  size_t n_book;
  uint32_t *book;
};
#define ANS_LIVE_SKILL__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&ans_live_skill__descriptor) \
    , 0,NULL, 0,NULL, 0,NULL, 0,NULL }


struct  _AnsLearnLiveSkill
{
  ProtobufCMessage base;
  uint32_t type;
  uint32_t lv;
  int32_t ret;
  uint32_t exp;
  uint32_t book;
  uint32_t broken;
};
#define ANS_LEARN_LIVE_SKILL__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&ans_learn_live_skill__descriptor) \
    , 0, 0, 0, 0, 0, 0 }


/* SkillCastRequest methods */
void   skill_cast_request__init
                     (SkillCastRequest         *message);
size_t skill_cast_request__get_packed_size
                     (const SkillCastRequest   *message);
size_t skill_cast_request__pack
                     (const SkillCastRequest   *message,
                      uint8_t             *out);
size_t skill_cast_request__pack_to_buffer
                     (const SkillCastRequest   *message,
                      ProtobufCBuffer     *buffer);
SkillCastRequest *
       skill_cast_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   skill_cast_request__free_unpacked
                     (SkillCastRequest *message,
                      ProtobufCAllocator *allocator);
/* SkillCastNotify methods */
void   skill_cast_notify__init
                     (SkillCastNotify         *message);
size_t skill_cast_notify__get_packed_size
                     (const SkillCastNotify   *message);
size_t skill_cast_notify__pack
                     (const SkillCastNotify   *message,
                      uint8_t             *out);
size_t skill_cast_notify__pack_to_buffer
                     (const SkillCastNotify   *message,
                      ProtobufCBuffer     *buffer);
SkillCastNotify *
       skill_cast_notify__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   skill_cast_notify__free_unpacked
                     (SkillCastNotify *message,
                      ProtobufCAllocator *allocator);
/* SkillHitRequest methods */
void   skill_hit_request__init
                     (SkillHitRequest         *message);
size_t skill_hit_request__get_packed_size
                     (const SkillHitRequest   *message);
size_t skill_hit_request__pack
                     (const SkillHitRequest   *message,
                      uint8_t             *out);
size_t skill_hit_request__pack_to_buffer
                     (const SkillHitRequest   *message,
                      ProtobufCBuffer     *buffer);
SkillHitRequest *
       skill_hit_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   skill_hit_request__free_unpacked
                     (SkillHitRequest *message,
                      ProtobufCAllocator *allocator);
/* SkillHitEffect methods */
void   skill_hit_effect__init
                     (SkillHitEffect         *message);
size_t skill_hit_effect__get_packed_size
                     (const SkillHitEffect   *message);
size_t skill_hit_effect__pack
                     (const SkillHitEffect   *message,
                      uint8_t             *out);
size_t skill_hit_effect__pack_to_buffer
                     (const SkillHitEffect   *message,
                      ProtobufCBuffer     *buffer);
SkillHitEffect *
       skill_hit_effect__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   skill_hit_effect__free_unpacked
                     (SkillHitEffect *message,
                      ProtobufCAllocator *allocator);
/* SkillHitNotify methods */
void   skill_hit_notify__init
                     (SkillHitNotify         *message);
size_t skill_hit_notify__get_packed_size
                     (const SkillHitNotify   *message);
size_t skill_hit_notify__pack
                     (const SkillHitNotify   *message,
                      uint8_t             *out);
size_t skill_hit_notify__pack_to_buffer
                     (const SkillHitNotify   *message,
                      ProtobufCBuffer     *buffer);
SkillHitNotify *
       skill_hit_notify__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   skill_hit_notify__free_unpacked
                     (SkillHitNotify *message,
                      ProtobufCAllocator *allocator);
/* SkillCallAttackRequest methods */
void   skill_call_attack_request__init
                     (SkillCallAttackRequest         *message);
size_t skill_call_attack_request__get_packed_size
                     (const SkillCallAttackRequest   *message);
size_t skill_call_attack_request__pack
                     (const SkillCallAttackRequest   *message,
                      uint8_t             *out);
size_t skill_call_attack_request__pack_to_buffer
                     (const SkillCallAttackRequest   *message,
                      ProtobufCBuffer     *buffer);
SkillCallAttackRequest *
       skill_call_attack_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   skill_call_attack_request__free_unpacked
                     (SkillCallAttackRequest *message,
                      ProtobufCAllocator *allocator);
/* SkillCallAttackNotify methods */
void   skill_call_attack_notify__init
                     (SkillCallAttackNotify         *message);
size_t skill_call_attack_notify__get_packed_size
                     (const SkillCallAttackNotify   *message);
size_t skill_call_attack_notify__pack
                     (const SkillCallAttackNotify   *message,
                      uint8_t             *out);
size_t skill_call_attack_notify__pack_to_buffer
                     (const SkillCallAttackNotify   *message,
                      ProtobufCBuffer     *buffer);
SkillCallAttackNotify *
       skill_call_attack_notify__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   skill_call_attack_notify__free_unpacked
                     (SkillCallAttackNotify *message,
                      ProtobufCAllocator *allocator);
/* SkillHitImmediateNotify methods */
void   skill_hit_immediate_notify__init
                     (SkillHitImmediateNotify         *message);
size_t skill_hit_immediate_notify__get_packed_size
                     (const SkillHitImmediateNotify   *message);
size_t skill_hit_immediate_notify__pack
                     (const SkillHitImmediateNotify   *message,
                      uint8_t             *out);
size_t skill_hit_immediate_notify__pack_to_buffer
                     (const SkillHitImmediateNotify   *message,
                      ProtobufCBuffer     *buffer);
SkillHitImmediateNotify *
       skill_hit_immediate_notify__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   skill_hit_immediate_notify__free_unpacked
                     (SkillHitImmediateNotify *message,
                      ProtobufCAllocator *allocator);
/* SkillMoveRequest methods */
void   skill_move_request__init
                     (SkillMoveRequest         *message);
size_t skill_move_request__get_packed_size
                     (const SkillMoveRequest   *message);
size_t skill_move_request__pack
                     (const SkillMoveRequest   *message,
                      uint8_t             *out);
size_t skill_move_request__pack_to_buffer
                     (const SkillMoveRequest   *message,
                      ProtobufCBuffer     *buffer);
SkillMoveRequest *
       skill_move_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   skill_move_request__free_unpacked
                     (SkillMoveRequest *message,
                      ProtobufCAllocator *allocator);
/* SkillMoveNotify methods */
void   skill_move_notify__init
                     (SkillMoveNotify         *message);
size_t skill_move_notify__get_packed_size
                     (const SkillMoveNotify   *message);
size_t skill_move_notify__pack
                     (const SkillMoveNotify   *message,
                      uint8_t             *out);
size_t skill_move_notify__pack_to_buffer
                     (const SkillMoveNotify   *message,
                      ProtobufCBuffer     *buffer);
SkillMoveNotify *
       skill_move_notify__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   skill_move_notify__free_unpacked
                     (SkillMoveNotify *message,
                      ProtobufCAllocator *allocator);
/* AddBuffNotify methods */
void   add_buff_notify__init
                     (AddBuffNotify         *message);
size_t add_buff_notify__get_packed_size
                     (const AddBuffNotify   *message);
size_t add_buff_notify__pack
                     (const AddBuffNotify   *message,
                      uint8_t             *out);
size_t add_buff_notify__pack_to_buffer
                     (const AddBuffNotify   *message,
                      ProtobufCBuffer     *buffer);
AddBuffNotify *
       add_buff_notify__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   add_buff_notify__free_unpacked
                     (AddBuffNotify *message,
                      ProtobufCAllocator *allocator);
/* SkillData methods */
void   skill_data__init
                     (SkillData         *message);
size_t skill_data__get_packed_size
                     (const SkillData   *message);
size_t skill_data__pack
                     (const SkillData   *message,
                      uint8_t             *out);
size_t skill_data__pack_to_buffer
                     (const SkillData   *message,
                      ProtobufCBuffer     *buffer);
SkillData *
       skill_data__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   skill_data__free_unpacked
                     (SkillData *message,
                      ProtobufCAllocator *allocator);
/* SkillList methods */
void   skill_list__init
                     (SkillList         *message);
size_t skill_list__get_packed_size
                     (const SkillList   *message);
size_t skill_list__pack
                     (const SkillList   *message,
                      uint8_t             *out);
size_t skill_list__pack_to_buffer
                     (const SkillList   *message,
                      ProtobufCBuffer     *buffer);
SkillList *
       skill_list__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   skill_list__free_unpacked
                     (SkillList *message,
                      ProtobufCAllocator *allocator);
/* LearnSkillReq methods */
void   learn_skill_req__init
                     (LearnSkillReq         *message);
size_t learn_skill_req__get_packed_size
                     (const LearnSkillReq   *message);
size_t learn_skill_req__pack
                     (const LearnSkillReq   *message,
                      uint8_t             *out);
size_t learn_skill_req__pack_to_buffer
                     (const LearnSkillReq   *message,
                      ProtobufCBuffer     *buffer);
LearnSkillReq *
       learn_skill_req__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   learn_skill_req__free_unpacked
                     (LearnSkillReq *message,
                      ProtobufCAllocator *allocator);
/* LearnSkillAns methods */
void   learn_skill_ans__init
                     (LearnSkillAns         *message);
size_t learn_skill_ans__get_packed_size
                     (const LearnSkillAns   *message);
size_t learn_skill_ans__pack
                     (const LearnSkillAns   *message,
                      uint8_t             *out);
size_t learn_skill_ans__pack_to_buffer
                     (const LearnSkillAns   *message,
                      ProtobufCBuffer     *buffer);
LearnSkillAns *
       learn_skill_ans__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   learn_skill_ans__free_unpacked
                     (LearnSkillAns *message,
                      ProtobufCAllocator *allocator);
/* Fuwen methods */
void   fuwen__init
                     (Fuwen         *message);
size_t fuwen__get_packed_size
                     (const Fuwen   *message);
size_t fuwen__pack
                     (const Fuwen   *message,
                      uint8_t             *out);
size_t fuwen__pack_to_buffer
                     (const Fuwen   *message,
                      ProtobufCBuffer     *buffer);
Fuwen *
       fuwen__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   fuwen__free_unpacked
                     (Fuwen *message,
                      ProtobufCAllocator *allocator);
/* FuwenAns methods */
void   fuwen_ans__init
                     (FuwenAns         *message);
size_t fuwen_ans__get_packed_size
                     (const FuwenAns   *message);
size_t fuwen_ans__pack
                     (const FuwenAns   *message,
                      uint8_t             *out);
size_t fuwen_ans__pack_to_buffer
                     (const FuwenAns   *message,
                      ProtobufCBuffer     *buffer);
FuwenAns *
       fuwen_ans__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   fuwen_ans__free_unpacked
                     (FuwenAns *message,
                      ProtobufCAllocator *allocator);
/* BuffStateChangedNotify methods */
void   buff_state_changed_notify__init
                     (BuffStateChangedNotify         *message);
size_t buff_state_changed_notify__get_packed_size
                     (const BuffStateChangedNotify   *message);
size_t buff_state_changed_notify__pack
                     (const BuffStateChangedNotify   *message,
                      uint8_t             *out);
size_t buff_state_changed_notify__pack_to_buffer
                     (const BuffStateChangedNotify   *message,
                      ProtobufCBuffer     *buffer);
BuffStateChangedNotify *
       buff_state_changed_notify__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   buff_state_changed_notify__free_unpacked
                     (BuffStateChangedNotify *message,
                      ProtobufCAllocator *allocator);
/* LearnLiveReq methods */
void   learn_live_req__init
                     (LearnLiveReq         *message);
size_t learn_live_req__get_packed_size
                     (const LearnLiveReq   *message);
size_t learn_live_req__pack
                     (const LearnLiveReq   *message,
                      uint8_t             *out);
size_t learn_live_req__pack_to_buffer
                     (const LearnLiveReq   *message,
                      ProtobufCBuffer     *buffer);
LearnLiveReq *
       learn_live_req__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   learn_live_req__free_unpacked
                     (LearnLiveReq *message,
                      ProtobufCAllocator *allocator);
/* AnsLiveSkill methods */
void   ans_live_skill__init
                     (AnsLiveSkill         *message);
size_t ans_live_skill__get_packed_size
                     (const AnsLiveSkill   *message);
size_t ans_live_skill__pack
                     (const AnsLiveSkill   *message,
                      uint8_t             *out);
size_t ans_live_skill__pack_to_buffer
                     (const AnsLiveSkill   *message,
                      ProtobufCBuffer     *buffer);
AnsLiveSkill *
       ans_live_skill__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   ans_live_skill__free_unpacked
                     (AnsLiveSkill *message,
                      ProtobufCAllocator *allocator);
/* AnsLearnLiveSkill methods */
void   ans_learn_live_skill__init
                     (AnsLearnLiveSkill         *message);
size_t ans_learn_live_skill__get_packed_size
                     (const AnsLearnLiveSkill   *message);
size_t ans_learn_live_skill__pack
                     (const AnsLearnLiveSkill   *message,
                      uint8_t             *out);
size_t ans_learn_live_skill__pack_to_buffer
                     (const AnsLearnLiveSkill   *message,
                      ProtobufCBuffer     *buffer);
AnsLearnLiveSkill *
       ans_learn_live_skill__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   ans_learn_live_skill__free_unpacked
                     (AnsLearnLiveSkill *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*SkillCastRequest_Closure)
                 (const SkillCastRequest *message,
                  void *closure_data);
typedef void (*SkillCastNotify_Closure)
                 (const SkillCastNotify *message,
                  void *closure_data);
typedef void (*SkillHitRequest_Closure)
                 (const SkillHitRequest *message,
                  void *closure_data);
typedef void (*SkillHitEffect_Closure)
                 (const SkillHitEffect *message,
                  void *closure_data);
typedef void (*SkillHitNotify_Closure)
                 (const SkillHitNotify *message,
                  void *closure_data);
typedef void (*SkillCallAttackRequest_Closure)
                 (const SkillCallAttackRequest *message,
                  void *closure_data);
typedef void (*SkillCallAttackNotify_Closure)
                 (const SkillCallAttackNotify *message,
                  void *closure_data);
typedef void (*SkillHitImmediateNotify_Closure)
                 (const SkillHitImmediateNotify *message,
                  void *closure_data);
typedef void (*SkillMoveRequest_Closure)
                 (const SkillMoveRequest *message,
                  void *closure_data);
typedef void (*SkillMoveNotify_Closure)
                 (const SkillMoveNotify *message,
                  void *closure_data);
typedef void (*AddBuffNotify_Closure)
                 (const AddBuffNotify *message,
                  void *closure_data);
typedef void (*SkillData_Closure)
                 (const SkillData *message,
                  void *closure_data);
typedef void (*SkillList_Closure)
                 (const SkillList *message,
                  void *closure_data);
typedef void (*LearnSkillReq_Closure)
                 (const LearnSkillReq *message,
                  void *closure_data);
typedef void (*LearnSkillAns_Closure)
                 (const LearnSkillAns *message,
                  void *closure_data);
typedef void (*Fuwen_Closure)
                 (const Fuwen *message,
                  void *closure_data);
typedef void (*FuwenAns_Closure)
                 (const FuwenAns *message,
                  void *closure_data);
typedef void (*BuffStateChangedNotify_Closure)
                 (const BuffStateChangedNotify *message,
                  void *closure_data);
typedef void (*LearnLiveReq_Closure)
                 (const LearnLiveReq *message,
                  void *closure_data);
typedef void (*AnsLiveSkill_Closure)
                 (const AnsLiveSkill *message,
                  void *closure_data);
typedef void (*AnsLearnLiveSkill_Closure)
                 (const AnsLearnLiveSkill *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCEnumDescriptor    live__skill__type__descriptor;
extern const ProtobufCMessageDescriptor skill_cast_request__descriptor;
extern const ProtobufCMessageDescriptor skill_cast_notify__descriptor;
extern const ProtobufCMessageDescriptor skill_hit_request__descriptor;
extern const ProtobufCMessageDescriptor skill_hit_effect__descriptor;
extern const ProtobufCMessageDescriptor skill_hit_notify__descriptor;
extern const ProtobufCMessageDescriptor skill_call_attack_request__descriptor;
extern const ProtobufCMessageDescriptor skill_call_attack_notify__descriptor;
extern const ProtobufCMessageDescriptor skill_hit_immediate_notify__descriptor;
extern const ProtobufCMessageDescriptor skill_move_request__descriptor;
extern const ProtobufCMessageDescriptor skill_move_notify__descriptor;
extern const ProtobufCMessageDescriptor add_buff_notify__descriptor;
extern const ProtobufCMessageDescriptor skill_data__descriptor;
extern const ProtobufCMessageDescriptor skill_list__descriptor;
extern const ProtobufCMessageDescriptor learn_skill_req__descriptor;
extern const ProtobufCMessageDescriptor learn_skill_ans__descriptor;
extern const ProtobufCMessageDescriptor fuwen__descriptor;
extern const ProtobufCMessageDescriptor fuwen_ans__descriptor;
extern const ProtobufCMessageDescriptor buff_state_changed_notify__descriptor;
extern const ProtobufCMessageDescriptor learn_live_req__descriptor;
extern const ProtobufCMessageDescriptor ans_live_skill__descriptor;
extern const ProtobufCMessageDescriptor ans_learn_live_skill__descriptor;

PROTOBUF_C_END_DECLS


#endif  /* PROTOBUF_cast_5fskill_2eproto__INCLUDED */
