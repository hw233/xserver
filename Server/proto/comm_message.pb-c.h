/* Generated by the protocol buffer compiler.  DO NOT EDIT! */

#ifndef PROTOBUF_C_comm_5fmessage_2eproto__INCLUDED
#define PROTOBUF_C_comm_5fmessage_2eproto__INCLUDED

#include <google/protobuf-c/protobuf-c.h>

PROTOBUF_C_BEGIN_DECLS


typedef struct _CommAnswer CommAnswer;
typedef struct _PosData PosData;
typedef struct _BuffInfo BuffInfo;
typedef struct _AttrData AttrData;
typedef struct _PlayerBaseInfo PlayerBaseInfo;
typedef struct _ItemBaguaData ItemBaguaData;
typedef struct _BagGrid BagGrid;
typedef struct _ItemData ItemData;
typedef struct _HeadIconData HeadIconData;
typedef struct _TaskCount TaskCount;
typedef struct _TaskRewardData TaskRewardData;
typedef struct _TaskData TaskData;
typedef struct _PlayerOnlineState PlayerOnlineState;
typedef struct _EquipEnchantData EquipEnchantData;
typedef struct _EquipData EquipData;
typedef struct _MailData MailData;
typedef struct _GoodsData GoodsData;
typedef struct _PlayerBaseData PlayerBaseData;


/* --- enums --- */

typedef enum _TaskStatus {
  TASK_STATUS__NOT_ACCEPT_YET = 0,
  TASK_STATUS__UNACCEPTABLE = 1,
  TASK_STATUS__ACCEPTABLE = 2,
  TASK_STATUS__ACCEPTED = 3,
  TASK_STATUS__ACHIEVED = 4,
  TASK_STATUS__FINISH = 5,
  TASK_STATUS__UNACHIEVABLE = 6
} TaskStatus;

/* --- messages --- */

struct  _CommAnswer
{
  ProtobufCMessage base;
  int32_t result;
};
#define COMM_ANSWER__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&comm_answer__descriptor) \
    , 0 }


struct  _PosData
{
  ProtobufCMessage base;
  float pos_x;
  float pos_z;
};
#define POS_DATA__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&pos_data__descriptor) \
    , 0, 0 }


struct  _BuffInfo
{
  ProtobufCMessage base;
  uint32_t id;
  uint32_t start_time;
};
#define BUFF_INFO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&buff_info__descriptor) \
    , 0, 0 }


struct  _AttrData
{
  ProtobufCMessage base;
  uint32_t id;
  double val;
};
#define ATTR_DATA__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&attr_data__descriptor) \
    , 0, 0 }


struct  _PlayerBaseInfo
{
  ProtobufCMessage base;
  uint64_t playerid;
  char *name;
  size_t n_attrid;
  uint32_t *attrid;
  size_t n_attrval;
  uint32_t *attrval;
};
#define PLAYER_BASE_INFO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&player_base_info__descriptor) \
    , 0, NULL, 0,NULL, 0,NULL }


struct  _ItemBaguaData
{
  ProtobufCMessage base;
  uint32_t star;
  double main_attr_val;
  size_t n_minor_attrs;
  AttrData **minor_attrs;
};
#define ITEM_BAGUA_DATA__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&item_bagua_data__descriptor) \
    , 0, 0, 0,NULL }


struct  _BagGrid
{
  ProtobufCMessage base;
  uint32_t index;
  uint32_t id;
  uint32_t num;
  uint32_t usedcount;
  uint32_t expiretime;
  ItemBaguaData *bagua;
};
#define BAG_GRID__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&bag_grid__descriptor) \
    , 0, 0, 0, 0, 0, NULL }


struct  _ItemData
{
  ProtobufCMessage base;
  uint32_t id;
  uint32_t num;
};
#define ITEM_DATA__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&item_data__descriptor) \
    , 0, 0 }


struct  _HeadIconData
{
  ProtobufCMessage base;
  uint32_t id;
  uint32_t status;
};
#define HEAD_ICON_DATA__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&head_icon_data__descriptor) \
    , 0, 0 }


struct  _TaskCount
{
  ProtobufCMessage base;
  uint32_t type;
  uint32_t count;
};
#define TASK_COUNT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&task_count__descriptor) \
    , 0, 0 }


struct  _TaskRewardData
{
  ProtobufCMessage base;
  size_t n_items;
  ItemData **items;
};
#define TASK_REWARD_DATA__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&task_reward_data__descriptor) \
    , 0,NULL }


struct  _TaskData
{
  ProtobufCMessage base;
  uint32_t id;
  uint32_t status;
  uint32_t expiretime;
  size_t n_progress;
  TaskCount **progress;
  TaskRewardData *reward;
};
#define TASK_DATA__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&task_data__descriptor) \
    , 0, 0, 0, 0,NULL, NULL }


struct  _PlayerOnlineState
{
  ProtobufCMessage base;
  uint64_t id;
  protobuf_c_boolean state;
};
#define PLAYER_ONLINE_STATE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&player_online_state__descriptor) \
    , 0, 0 }


struct  _EquipEnchantData
{
  ProtobufCMessage base;
  uint32_t index;
  AttrData *curattr;
  size_t n_randattr;
  AttrData **randattr;
};
#define EQUIP_ENCHANT_DATA__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&equip_enchant_data__descriptor) \
    , 0, NULL, 0,NULL }


struct  _EquipData
{
  ProtobufCMessage base;
  uint32_t type;
  uint32_t stair;
  uint32_t starlv;
  uint32_t starexp;
  size_t n_enchant;
  EquipEnchantData **enchant;
  size_t n_inlay;
  int32_t *inlay;
};
#define EQUIP_DATA__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&equip_data__descriptor) \
    , 0, 0, 0, 0, 0,NULL, 0,NULL }


struct  _MailData
{
  ProtobufCMessage base;
  uint64_t id;
  uint32_t type;
  char *title;
  char *sendername;
  char *content;
  size_t n_args;
  char **args;
  uint32_t sendtime;
  size_t n_attach;
  ItemData **attach;
  uint32_t read;
  uint32_t extract;
};
#define MAIL_DATA__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&mail_data__descriptor) \
    , 0, 0, NULL, NULL, NULL, 0,NULL, 0, 0,NULL, 0, 0 }


struct  _GoodsData
{
  ProtobufCMessage base;
  uint32_t goodsid;
  uint32_t boughtnum;
};
#define GOODS_DATA__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&goods_data__descriptor) \
    , 0, 0 }


struct  _PlayerBaseData
{
  ProtobufCMessage base;
  uint64_t playerid;
  char *name;
  size_t n_attrs;
  AttrData **attrs;
  size_t n_tags;
  uint32_t *tags;
  char *textintro;
};
#define PLAYER_BASE_DATA__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&player_base_data__descriptor) \
    , 0, NULL, 0,NULL, 0,NULL, NULL }


/* CommAnswer methods */
void   comm_answer__init
                     (CommAnswer         *message);
size_t comm_answer__get_packed_size
                     (const CommAnswer   *message);
size_t comm_answer__pack
                     (const CommAnswer   *message,
                      uint8_t             *out);
size_t comm_answer__pack_to_buffer
                     (const CommAnswer   *message,
                      ProtobufCBuffer     *buffer);
CommAnswer *
       comm_answer__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   comm_answer__free_unpacked
                     (CommAnswer *message,
                      ProtobufCAllocator *allocator);
/* PosData methods */
void   pos_data__init
                     (PosData         *message);
size_t pos_data__get_packed_size
                     (const PosData   *message);
size_t pos_data__pack
                     (const PosData   *message,
                      uint8_t             *out);
size_t pos_data__pack_to_buffer
                     (const PosData   *message,
                      ProtobufCBuffer     *buffer);
PosData *
       pos_data__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   pos_data__free_unpacked
                     (PosData *message,
                      ProtobufCAllocator *allocator);
/* BuffInfo methods */
void   buff_info__init
                     (BuffInfo         *message);
size_t buff_info__get_packed_size
                     (const BuffInfo   *message);
size_t buff_info__pack
                     (const BuffInfo   *message,
                      uint8_t             *out);
size_t buff_info__pack_to_buffer
                     (const BuffInfo   *message,
                      ProtobufCBuffer     *buffer);
BuffInfo *
       buff_info__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   buff_info__free_unpacked
                     (BuffInfo *message,
                      ProtobufCAllocator *allocator);
/* AttrData methods */
void   attr_data__init
                     (AttrData         *message);
size_t attr_data__get_packed_size
                     (const AttrData   *message);
size_t attr_data__pack
                     (const AttrData   *message,
                      uint8_t             *out);
size_t attr_data__pack_to_buffer
                     (const AttrData   *message,
                      ProtobufCBuffer     *buffer);
AttrData *
       attr_data__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   attr_data__free_unpacked
                     (AttrData *message,
                      ProtobufCAllocator *allocator);
/* PlayerBaseInfo methods */
void   player_base_info__init
                     (PlayerBaseInfo         *message);
size_t player_base_info__get_packed_size
                     (const PlayerBaseInfo   *message);
size_t player_base_info__pack
                     (const PlayerBaseInfo   *message,
                      uint8_t             *out);
size_t player_base_info__pack_to_buffer
                     (const PlayerBaseInfo   *message,
                      ProtobufCBuffer     *buffer);
PlayerBaseInfo *
       player_base_info__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   player_base_info__free_unpacked
                     (PlayerBaseInfo *message,
                      ProtobufCAllocator *allocator);
/* ItemBaguaData methods */
void   item_bagua_data__init
                     (ItemBaguaData         *message);
size_t item_bagua_data__get_packed_size
                     (const ItemBaguaData   *message);
size_t item_bagua_data__pack
                     (const ItemBaguaData   *message,
                      uint8_t             *out);
size_t item_bagua_data__pack_to_buffer
                     (const ItemBaguaData   *message,
                      ProtobufCBuffer     *buffer);
ItemBaguaData *
       item_bagua_data__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   item_bagua_data__free_unpacked
                     (ItemBaguaData *message,
                      ProtobufCAllocator *allocator);
/* BagGrid methods */
void   bag_grid__init
                     (BagGrid         *message);
size_t bag_grid__get_packed_size
                     (const BagGrid   *message);
size_t bag_grid__pack
                     (const BagGrid   *message,
                      uint8_t             *out);
size_t bag_grid__pack_to_buffer
                     (const BagGrid   *message,
                      ProtobufCBuffer     *buffer);
BagGrid *
       bag_grid__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   bag_grid__free_unpacked
                     (BagGrid *message,
                      ProtobufCAllocator *allocator);
/* ItemData methods */
void   item_data__init
                     (ItemData         *message);
size_t item_data__get_packed_size
                     (const ItemData   *message);
size_t item_data__pack
                     (const ItemData   *message,
                      uint8_t             *out);
size_t item_data__pack_to_buffer
                     (const ItemData   *message,
                      ProtobufCBuffer     *buffer);
ItemData *
       item_data__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   item_data__free_unpacked
                     (ItemData *message,
                      ProtobufCAllocator *allocator);
/* HeadIconData methods */
void   head_icon_data__init
                     (HeadIconData         *message);
size_t head_icon_data__get_packed_size
                     (const HeadIconData   *message);
size_t head_icon_data__pack
                     (const HeadIconData   *message,
                      uint8_t             *out);
size_t head_icon_data__pack_to_buffer
                     (const HeadIconData   *message,
                      ProtobufCBuffer     *buffer);
HeadIconData *
       head_icon_data__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   head_icon_data__free_unpacked
                     (HeadIconData *message,
                      ProtobufCAllocator *allocator);
/* TaskCount methods */
void   task_count__init
                     (TaskCount         *message);
size_t task_count__get_packed_size
                     (const TaskCount   *message);
size_t task_count__pack
                     (const TaskCount   *message,
                      uint8_t             *out);
size_t task_count__pack_to_buffer
                     (const TaskCount   *message,
                      ProtobufCBuffer     *buffer);
TaskCount *
       task_count__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   task_count__free_unpacked
                     (TaskCount *message,
                      ProtobufCAllocator *allocator);
/* TaskRewardData methods */
void   task_reward_data__init
                     (TaskRewardData         *message);
size_t task_reward_data__get_packed_size
                     (const TaskRewardData   *message);
size_t task_reward_data__pack
                     (const TaskRewardData   *message,
                      uint8_t             *out);
size_t task_reward_data__pack_to_buffer
                     (const TaskRewardData   *message,
                      ProtobufCBuffer     *buffer);
TaskRewardData *
       task_reward_data__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   task_reward_data__free_unpacked
                     (TaskRewardData *message,
                      ProtobufCAllocator *allocator);
/* TaskData methods */
void   task_data__init
                     (TaskData         *message);
size_t task_data__get_packed_size
                     (const TaskData   *message);
size_t task_data__pack
                     (const TaskData   *message,
                      uint8_t             *out);
size_t task_data__pack_to_buffer
                     (const TaskData   *message,
                      ProtobufCBuffer     *buffer);
TaskData *
       task_data__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   task_data__free_unpacked
                     (TaskData *message,
                      ProtobufCAllocator *allocator);
/* PlayerOnlineState methods */
void   player_online_state__init
                     (PlayerOnlineState         *message);
size_t player_online_state__get_packed_size
                     (const PlayerOnlineState   *message);
size_t player_online_state__pack
                     (const PlayerOnlineState   *message,
                      uint8_t             *out);
size_t player_online_state__pack_to_buffer
                     (const PlayerOnlineState   *message,
                      ProtobufCBuffer     *buffer);
PlayerOnlineState *
       player_online_state__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   player_online_state__free_unpacked
                     (PlayerOnlineState *message,
                      ProtobufCAllocator *allocator);
/* EquipEnchantData methods */
void   equip_enchant_data__init
                     (EquipEnchantData         *message);
size_t equip_enchant_data__get_packed_size
                     (const EquipEnchantData   *message);
size_t equip_enchant_data__pack
                     (const EquipEnchantData   *message,
                      uint8_t             *out);
size_t equip_enchant_data__pack_to_buffer
                     (const EquipEnchantData   *message,
                      ProtobufCBuffer     *buffer);
EquipEnchantData *
       equip_enchant_data__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   equip_enchant_data__free_unpacked
                     (EquipEnchantData *message,
                      ProtobufCAllocator *allocator);
/* EquipData methods */
void   equip_data__init
                     (EquipData         *message);
size_t equip_data__get_packed_size
                     (const EquipData   *message);
size_t equip_data__pack
                     (const EquipData   *message,
                      uint8_t             *out);
size_t equip_data__pack_to_buffer
                     (const EquipData   *message,
                      ProtobufCBuffer     *buffer);
EquipData *
       equip_data__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   equip_data__free_unpacked
                     (EquipData *message,
                      ProtobufCAllocator *allocator);
/* MailData methods */
void   mail_data__init
                     (MailData         *message);
size_t mail_data__get_packed_size
                     (const MailData   *message);
size_t mail_data__pack
                     (const MailData   *message,
                      uint8_t             *out);
size_t mail_data__pack_to_buffer
                     (const MailData   *message,
                      ProtobufCBuffer     *buffer);
MailData *
       mail_data__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   mail_data__free_unpacked
                     (MailData *message,
                      ProtobufCAllocator *allocator);
/* GoodsData methods */
void   goods_data__init
                     (GoodsData         *message);
size_t goods_data__get_packed_size
                     (const GoodsData   *message);
size_t goods_data__pack
                     (const GoodsData   *message,
                      uint8_t             *out);
size_t goods_data__pack_to_buffer
                     (const GoodsData   *message,
                      ProtobufCBuffer     *buffer);
GoodsData *
       goods_data__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   goods_data__free_unpacked
                     (GoodsData *message,
                      ProtobufCAllocator *allocator);
/* PlayerBaseData methods */
void   player_base_data__init
                     (PlayerBaseData         *message);
size_t player_base_data__get_packed_size
                     (const PlayerBaseData   *message);
size_t player_base_data__pack
                     (const PlayerBaseData   *message,
                      uint8_t             *out);
size_t player_base_data__pack_to_buffer
                     (const PlayerBaseData   *message,
                      ProtobufCBuffer     *buffer);
PlayerBaseData *
       player_base_data__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   player_base_data__free_unpacked
                     (PlayerBaseData *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*CommAnswer_Closure)
                 (const CommAnswer *message,
                  void *closure_data);
typedef void (*PosData_Closure)
                 (const PosData *message,
                  void *closure_data);
typedef void (*BuffInfo_Closure)
                 (const BuffInfo *message,
                  void *closure_data);
typedef void (*AttrData_Closure)
                 (const AttrData *message,
                  void *closure_data);
typedef void (*PlayerBaseInfo_Closure)
                 (const PlayerBaseInfo *message,
                  void *closure_data);
typedef void (*ItemBaguaData_Closure)
                 (const ItemBaguaData *message,
                  void *closure_data);
typedef void (*BagGrid_Closure)
                 (const BagGrid *message,
                  void *closure_data);
typedef void (*ItemData_Closure)
                 (const ItemData *message,
                  void *closure_data);
typedef void (*HeadIconData_Closure)
                 (const HeadIconData *message,
                  void *closure_data);
typedef void (*TaskCount_Closure)
                 (const TaskCount *message,
                  void *closure_data);
typedef void (*TaskRewardData_Closure)
                 (const TaskRewardData *message,
                  void *closure_data);
typedef void (*TaskData_Closure)
                 (const TaskData *message,
                  void *closure_data);
typedef void (*PlayerOnlineState_Closure)
                 (const PlayerOnlineState *message,
                  void *closure_data);
typedef void (*EquipEnchantData_Closure)
                 (const EquipEnchantData *message,
                  void *closure_data);
typedef void (*EquipData_Closure)
                 (const EquipData *message,
                  void *closure_data);
typedef void (*MailData_Closure)
                 (const MailData *message,
                  void *closure_data);
typedef void (*GoodsData_Closure)
                 (const GoodsData *message,
                  void *closure_data);
typedef void (*PlayerBaseData_Closure)
                 (const PlayerBaseData *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCEnumDescriptor    task_status__descriptor;
extern const ProtobufCMessageDescriptor comm_answer__descriptor;
extern const ProtobufCMessageDescriptor pos_data__descriptor;
extern const ProtobufCMessageDescriptor buff_info__descriptor;
extern const ProtobufCMessageDescriptor attr_data__descriptor;
extern const ProtobufCMessageDescriptor player_base_info__descriptor;
extern const ProtobufCMessageDescriptor item_bagua_data__descriptor;
extern const ProtobufCMessageDescriptor bag_grid__descriptor;
extern const ProtobufCMessageDescriptor item_data__descriptor;
extern const ProtobufCMessageDescriptor head_icon_data__descriptor;
extern const ProtobufCMessageDescriptor task_count__descriptor;
extern const ProtobufCMessageDescriptor task_reward_data__descriptor;
extern const ProtobufCMessageDescriptor task_data__descriptor;
extern const ProtobufCMessageDescriptor player_online_state__descriptor;
extern const ProtobufCMessageDescriptor equip_enchant_data__descriptor;
extern const ProtobufCMessageDescriptor equip_data__descriptor;
extern const ProtobufCMessageDescriptor mail_data__descriptor;
extern const ProtobufCMessageDescriptor goods_data__descriptor;
extern const ProtobufCMessageDescriptor player_base_data__descriptor;

PROTOBUF_C_END_DECLS


#endif  /* PROTOBUF_comm_5fmessage_2eproto__INCLUDED */
