/* Generated by the protocol buffer compiler.  DO NOT EDIT! */

#ifndef PROTOBUF_C_setting_2eproto__INCLUDED
#define PROTOBUF_C_setting_2eproto__INCLUDED

#include <google/protobuf-c/protobuf-c.h>

PROTOBUF_C_BEGIN_DECLS


typedef struct _ClientData ClientData;
typedef struct _LoadClientDataAnswer LoadClientDataAnswer;
typedef struct _SettingSwitchData SettingSwitchData;
typedef struct _SettingSwitchNotify SettingSwitchNotify;
typedef struct _SettingTurnSwitchRequest SettingTurnSwitchRequest;
typedef struct _SettingTurnSwitchAnswer SettingTurnSwitchAnswer;
typedef struct _TransferOutStuckInfoNotify TransferOutStuckInfoNotify;
typedef struct _TransferOutStuckAnswer TransferOutStuckAnswer;


/* --- enums --- */

typedef enum _SettingSwitchType {
  SETTING_SWITCH_TYPE__qiecuo = 1,
  SETTING_SWITCH_TYPE__team_invite = 2,
  SETTING_SWITCH_TYPE__friend = 3
} SettingSwitchType;

/* --- messages --- */

struct  _ClientData
{
  ProtobufCMessage base;
  uint32_t cameratype;
  uint32_t attackedtip;
};
#define CLIENT_DATA__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&client_data__descriptor) \
    , 0, 0 }


struct  _LoadClientDataAnswer
{
  ProtobufCMessage base;
  uint32_t result;
  ClientData *data;
};
#define LOAD_CLIENT_DATA_ANSWER__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&load_client_data_answer__descriptor) \
    , 0, NULL }


struct  _SettingSwitchData
{
  ProtobufCMessage base;
  SettingSwitchType type;
  uint32_t state;
};
#define SETTING_SWITCH_DATA__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&setting_switch_data__descriptor) \
    , 0, 0 }


struct  _SettingSwitchNotify
{
  ProtobufCMessage base;
  size_t n_datas;
  SettingSwitchData **datas;
};
#define SETTING_SWITCH_NOTIFY__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&setting_switch_notify__descriptor) \
    , 0,NULL }


struct  _SettingTurnSwitchRequest
{
  ProtobufCMessage base;
  SettingSwitchType type;
};
#define SETTING_TURN_SWITCH_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&setting_turn_switch_request__descriptor) \
    , 0 }


struct  _SettingTurnSwitchAnswer
{
  ProtobufCMessage base;
  uint32_t result;
  SettingSwitchData *data;
};
#define SETTING_TURN_SWITCH_ANSWER__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&setting_turn_switch_answer__descriptor) \
    , 0, NULL }


struct  _TransferOutStuckInfoNotify
{
  ProtobufCMessage base;
  uint32_t cdtimestamp;
};
#define TRANSFER_OUT_STUCK_INFO_NOTIFY__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&transfer_out_stuck_info_notify__descriptor) \
    , 0 }


struct  _TransferOutStuckAnswer
{
  ProtobufCMessage base;
  uint32_t result;
  uint32_t cdtimestamp;
};
#define TRANSFER_OUT_STUCK_ANSWER__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&transfer_out_stuck_answer__descriptor) \
    , 0, 0 }


/* ClientData methods */
void   client_data__init
                     (ClientData         *message);
size_t client_data__get_packed_size
                     (const ClientData   *message);
size_t client_data__pack
                     (const ClientData   *message,
                      uint8_t             *out);
size_t client_data__pack_to_buffer
                     (const ClientData   *message,
                      ProtobufCBuffer     *buffer);
ClientData *
       client_data__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   client_data__free_unpacked
                     (ClientData *message,
                      ProtobufCAllocator *allocator);
/* LoadClientDataAnswer methods */
void   load_client_data_answer__init
                     (LoadClientDataAnswer         *message);
size_t load_client_data_answer__get_packed_size
                     (const LoadClientDataAnswer   *message);
size_t load_client_data_answer__pack
                     (const LoadClientDataAnswer   *message,
                      uint8_t             *out);
size_t load_client_data_answer__pack_to_buffer
                     (const LoadClientDataAnswer   *message,
                      ProtobufCBuffer     *buffer);
LoadClientDataAnswer *
       load_client_data_answer__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   load_client_data_answer__free_unpacked
                     (LoadClientDataAnswer *message,
                      ProtobufCAllocator *allocator);
/* SettingSwitchData methods */
void   setting_switch_data__init
                     (SettingSwitchData         *message);
size_t setting_switch_data__get_packed_size
                     (const SettingSwitchData   *message);
size_t setting_switch_data__pack
                     (const SettingSwitchData   *message,
                      uint8_t             *out);
size_t setting_switch_data__pack_to_buffer
                     (const SettingSwitchData   *message,
                      ProtobufCBuffer     *buffer);
SettingSwitchData *
       setting_switch_data__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   setting_switch_data__free_unpacked
                     (SettingSwitchData *message,
                      ProtobufCAllocator *allocator);
/* SettingSwitchNotify methods */
void   setting_switch_notify__init
                     (SettingSwitchNotify         *message);
size_t setting_switch_notify__get_packed_size
                     (const SettingSwitchNotify   *message);
size_t setting_switch_notify__pack
                     (const SettingSwitchNotify   *message,
                      uint8_t             *out);
size_t setting_switch_notify__pack_to_buffer
                     (const SettingSwitchNotify   *message,
                      ProtobufCBuffer     *buffer);
SettingSwitchNotify *
       setting_switch_notify__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   setting_switch_notify__free_unpacked
                     (SettingSwitchNotify *message,
                      ProtobufCAllocator *allocator);
/* SettingTurnSwitchRequest methods */
void   setting_turn_switch_request__init
                     (SettingTurnSwitchRequest         *message);
size_t setting_turn_switch_request__get_packed_size
                     (const SettingTurnSwitchRequest   *message);
size_t setting_turn_switch_request__pack
                     (const SettingTurnSwitchRequest   *message,
                      uint8_t             *out);
size_t setting_turn_switch_request__pack_to_buffer
                     (const SettingTurnSwitchRequest   *message,
                      ProtobufCBuffer     *buffer);
SettingTurnSwitchRequest *
       setting_turn_switch_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   setting_turn_switch_request__free_unpacked
                     (SettingTurnSwitchRequest *message,
                      ProtobufCAllocator *allocator);
/* SettingTurnSwitchAnswer methods */
void   setting_turn_switch_answer__init
                     (SettingTurnSwitchAnswer         *message);
size_t setting_turn_switch_answer__get_packed_size
                     (const SettingTurnSwitchAnswer   *message);
size_t setting_turn_switch_answer__pack
                     (const SettingTurnSwitchAnswer   *message,
                      uint8_t             *out);
size_t setting_turn_switch_answer__pack_to_buffer
                     (const SettingTurnSwitchAnswer   *message,
                      ProtobufCBuffer     *buffer);
SettingTurnSwitchAnswer *
       setting_turn_switch_answer__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   setting_turn_switch_answer__free_unpacked
                     (SettingTurnSwitchAnswer *message,
                      ProtobufCAllocator *allocator);
/* TransferOutStuckInfoNotify methods */
void   transfer_out_stuck_info_notify__init
                     (TransferOutStuckInfoNotify         *message);
size_t transfer_out_stuck_info_notify__get_packed_size
                     (const TransferOutStuckInfoNotify   *message);
size_t transfer_out_stuck_info_notify__pack
                     (const TransferOutStuckInfoNotify   *message,
                      uint8_t             *out);
size_t transfer_out_stuck_info_notify__pack_to_buffer
                     (const TransferOutStuckInfoNotify   *message,
                      ProtobufCBuffer     *buffer);
TransferOutStuckInfoNotify *
       transfer_out_stuck_info_notify__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   transfer_out_stuck_info_notify__free_unpacked
                     (TransferOutStuckInfoNotify *message,
                      ProtobufCAllocator *allocator);
/* TransferOutStuckAnswer methods */
void   transfer_out_stuck_answer__init
                     (TransferOutStuckAnswer         *message);
size_t transfer_out_stuck_answer__get_packed_size
                     (const TransferOutStuckAnswer   *message);
size_t transfer_out_stuck_answer__pack
                     (const TransferOutStuckAnswer   *message,
                      uint8_t             *out);
size_t transfer_out_stuck_answer__pack_to_buffer
                     (const TransferOutStuckAnswer   *message,
                      ProtobufCBuffer     *buffer);
TransferOutStuckAnswer *
       transfer_out_stuck_answer__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   transfer_out_stuck_answer__free_unpacked
                     (TransferOutStuckAnswer *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*ClientData_Closure)
                 (const ClientData *message,
                  void *closure_data);
typedef void (*LoadClientDataAnswer_Closure)
                 (const LoadClientDataAnswer *message,
                  void *closure_data);
typedef void (*SettingSwitchData_Closure)
                 (const SettingSwitchData *message,
                  void *closure_data);
typedef void (*SettingSwitchNotify_Closure)
                 (const SettingSwitchNotify *message,
                  void *closure_data);
typedef void (*SettingTurnSwitchRequest_Closure)
                 (const SettingTurnSwitchRequest *message,
                  void *closure_data);
typedef void (*SettingTurnSwitchAnswer_Closure)
                 (const SettingTurnSwitchAnswer *message,
                  void *closure_data);
typedef void (*TransferOutStuckInfoNotify_Closure)
                 (const TransferOutStuckInfoNotify *message,
                  void *closure_data);
typedef void (*TransferOutStuckAnswer_Closure)
                 (const TransferOutStuckAnswer *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCEnumDescriptor    setting_switch_type__descriptor;
extern const ProtobufCMessageDescriptor client_data__descriptor;
extern const ProtobufCMessageDescriptor load_client_data_answer__descriptor;
extern const ProtobufCMessageDescriptor setting_switch_data__descriptor;
extern const ProtobufCMessageDescriptor setting_switch_notify__descriptor;
extern const ProtobufCMessageDescriptor setting_turn_switch_request__descriptor;
extern const ProtobufCMessageDescriptor setting_turn_switch_answer__descriptor;
extern const ProtobufCMessageDescriptor transfer_out_stuck_info_notify__descriptor;
extern const ProtobufCMessageDescriptor transfer_out_stuck_answer__descriptor;

PROTOBUF_C_END_DECLS


#endif  /* PROTOBUF_setting_2eproto__INCLUDED */
