/* Generated by the protocol buffer compiler.  DO NOT EDIT! */

#ifndef PROTOBUF_C_equip_2eproto__INCLUDED
#define PROTOBUF_C_equip_2eproto__INCLUDED

#include <google/protobuf-c/protobuf-c.h>

PROTOBUF_C_BEGIN_DECLS

#include "comm_message.pb-c.h"

typedef struct _EquipListAnswer EquipListAnswer;
typedef struct _EquipStarUpRequest EquipStarUpRequest;
typedef struct _EquipStarUpAnswer EquipStarUpAnswer;
typedef struct _EquipEnchantRequest EquipEnchantRequest;
typedef struct _EquipEnchantAnswer EquipEnchantAnswer;
typedef struct _EquipEnchantRetainRequest EquipEnchantRetainRequest;
typedef struct _EquipEnchantRetainAnswer EquipEnchantRetainAnswer;
typedef struct _EquipDrillRequest EquipDrillRequest;
typedef struct _EquipDrillAnswer EquipDrillAnswer;
typedef struct _EquipInlayRequest EquipInlayRequest;
typedef struct _EquipInlayAnswer EquipInlayAnswer;
typedef struct _EquipStripRequest EquipStripRequest;
typedef struct _EquipStripAnswer EquipStripAnswer;
typedef struct _EquipGemComposeRequest EquipGemComposeRequest;
typedef struct _EquipGemComposeAnswer EquipGemComposeAnswer;


/* --- enums --- */


/* --- messages --- */

struct  _EquipListAnswer
{
  ProtobufCMessage base;
  uint32_t result;
  size_t n_equips;
  EquipData **equips;
};
#define EQUIP_LIST_ANSWER__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&equip_list_answer__descriptor) \
    , 0, 0,NULL }


struct  _EquipStarUpRequest
{
  ProtobufCMessage base;
  uint32_t type;
  uint32_t itemnum;
};
#define EQUIP_STAR_UP_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&equip_star_up_request__descriptor) \
    , 0, 0 }


struct  _EquipStarUpAnswer
{
  ProtobufCMessage base;
  uint32_t result;
  uint32_t type;
  uint32_t starlv;
  uint32_t starexp;
};
#define EQUIP_STAR_UP_ANSWER__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&equip_star_up_answer__descriptor) \
    , 0, 0, 0, 0 }


struct  _EquipEnchantRequest
{
  ProtobufCMessage base;
  uint32_t type;
  uint32_t index;
  uint32_t skipretain;
};
#define EQUIP_ENCHANT_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&equip_enchant_request__descriptor) \
    , 0, 0, 0 }


struct  _EquipEnchantAnswer
{
  ProtobufCMessage base;
  uint32_t result;
  uint32_t type;
  uint32_t index;
  size_t n_randattr;
  AttrData **randattr;
};
#define EQUIP_ENCHANT_ANSWER__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&equip_enchant_answer__descriptor) \
    , 0, 0, 0, 0,NULL }


struct  _EquipEnchantRetainRequest
{
  ProtobufCMessage base;
  uint32_t type;
  uint32_t attrindex;
  uint32_t retainindex;
};
#define EQUIP_ENCHANT_RETAIN_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&equip_enchant_retain_request__descriptor) \
    , 0, 0, 0 }


struct  _EquipEnchantRetainAnswer
{
  ProtobufCMessage base;
  uint32_t result;
  uint32_t type;
  uint32_t attrindex;
  AttrData *retainattr;
};
#define EQUIP_ENCHANT_RETAIN_ANSWER__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&equip_enchant_retain_answer__descriptor) \
    , 0, 0, 0, NULL }


struct  _EquipDrillRequest
{
  ProtobufCMessage base;
  uint32_t type;
  uint32_t index;
};
#define EQUIP_DRILL_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&equip_drill_request__descriptor) \
    , 0, 0 }


struct  _EquipDrillAnswer
{
  ProtobufCMessage base;
  uint32_t result;
  uint32_t type;
  uint32_t index;
};
#define EQUIP_DRILL_ANSWER__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&equip_drill_answer__descriptor) \
    , 0, 0, 0 }


struct  _EquipInlayRequest
{
  ProtobufCMessage base;
  uint32_t type;
  uint32_t index;
  uint32_t gemid;
};
#define EQUIP_INLAY_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&equip_inlay_request__descriptor) \
    , 0, 0, 0 }


struct  _EquipInlayAnswer
{
  ProtobufCMessage base;
  uint32_t result;
  uint32_t type;
  uint32_t index;
  uint32_t gemid;
};
#define EQUIP_INLAY_ANSWER__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&equip_inlay_answer__descriptor) \
    , 0, 0, 0, 0 }


struct  _EquipStripRequest
{
  ProtobufCMessage base;
  uint32_t type;
  uint32_t index;
};
#define EQUIP_STRIP_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&equip_strip_request__descriptor) \
    , 0, 0 }


struct  _EquipStripAnswer
{
  ProtobufCMessage base;
  uint32_t result;
  uint32_t type;
  uint32_t index;
};
#define EQUIP_STRIP_ANSWER__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&equip_strip_answer__descriptor) \
    , 0, 0, 0 }


struct  _EquipGemComposeRequest
{
  ProtobufCMessage base;
  uint32_t gemid;
  uint32_t materialtype;
};
#define EQUIP_GEM_COMPOSE_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&equip_gem_compose_request__descriptor) \
    , 0, 0 }


struct  _EquipGemComposeAnswer
{
  ProtobufCMessage base;
  uint32_t result;
  uint32_t gemid;
};
#define EQUIP_GEM_COMPOSE_ANSWER__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&equip_gem_compose_answer__descriptor) \
    , 0, 0 }


/* EquipListAnswer methods */
void   equip_list_answer__init
                     (EquipListAnswer         *message);
size_t equip_list_answer__get_packed_size
                     (const EquipListAnswer   *message);
size_t equip_list_answer__pack
                     (const EquipListAnswer   *message,
                      uint8_t             *out);
size_t equip_list_answer__pack_to_buffer
                     (const EquipListAnswer   *message,
                      ProtobufCBuffer     *buffer);
EquipListAnswer *
       equip_list_answer__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   equip_list_answer__free_unpacked
                     (EquipListAnswer *message,
                      ProtobufCAllocator *allocator);
/* EquipStarUpRequest methods */
void   equip_star_up_request__init
                     (EquipStarUpRequest         *message);
size_t equip_star_up_request__get_packed_size
                     (const EquipStarUpRequest   *message);
size_t equip_star_up_request__pack
                     (const EquipStarUpRequest   *message,
                      uint8_t             *out);
size_t equip_star_up_request__pack_to_buffer
                     (const EquipStarUpRequest   *message,
                      ProtobufCBuffer     *buffer);
EquipStarUpRequest *
       equip_star_up_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   equip_star_up_request__free_unpacked
                     (EquipStarUpRequest *message,
                      ProtobufCAllocator *allocator);
/* EquipStarUpAnswer methods */
void   equip_star_up_answer__init
                     (EquipStarUpAnswer         *message);
size_t equip_star_up_answer__get_packed_size
                     (const EquipStarUpAnswer   *message);
size_t equip_star_up_answer__pack
                     (const EquipStarUpAnswer   *message,
                      uint8_t             *out);
size_t equip_star_up_answer__pack_to_buffer
                     (const EquipStarUpAnswer   *message,
                      ProtobufCBuffer     *buffer);
EquipStarUpAnswer *
       equip_star_up_answer__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   equip_star_up_answer__free_unpacked
                     (EquipStarUpAnswer *message,
                      ProtobufCAllocator *allocator);
/* EquipEnchantRequest methods */
void   equip_enchant_request__init
                     (EquipEnchantRequest         *message);
size_t equip_enchant_request__get_packed_size
                     (const EquipEnchantRequest   *message);
size_t equip_enchant_request__pack
                     (const EquipEnchantRequest   *message,
                      uint8_t             *out);
size_t equip_enchant_request__pack_to_buffer
                     (const EquipEnchantRequest   *message,
                      ProtobufCBuffer     *buffer);
EquipEnchantRequest *
       equip_enchant_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   equip_enchant_request__free_unpacked
                     (EquipEnchantRequest *message,
                      ProtobufCAllocator *allocator);
/* EquipEnchantAnswer methods */
void   equip_enchant_answer__init
                     (EquipEnchantAnswer         *message);
size_t equip_enchant_answer__get_packed_size
                     (const EquipEnchantAnswer   *message);
size_t equip_enchant_answer__pack
                     (const EquipEnchantAnswer   *message,
                      uint8_t             *out);
size_t equip_enchant_answer__pack_to_buffer
                     (const EquipEnchantAnswer   *message,
                      ProtobufCBuffer     *buffer);
EquipEnchantAnswer *
       equip_enchant_answer__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   equip_enchant_answer__free_unpacked
                     (EquipEnchantAnswer *message,
                      ProtobufCAllocator *allocator);
/* EquipEnchantRetainRequest methods */
void   equip_enchant_retain_request__init
                     (EquipEnchantRetainRequest         *message);
size_t equip_enchant_retain_request__get_packed_size
                     (const EquipEnchantRetainRequest   *message);
size_t equip_enchant_retain_request__pack
                     (const EquipEnchantRetainRequest   *message,
                      uint8_t             *out);
size_t equip_enchant_retain_request__pack_to_buffer
                     (const EquipEnchantRetainRequest   *message,
                      ProtobufCBuffer     *buffer);
EquipEnchantRetainRequest *
       equip_enchant_retain_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   equip_enchant_retain_request__free_unpacked
                     (EquipEnchantRetainRequest *message,
                      ProtobufCAllocator *allocator);
/* EquipEnchantRetainAnswer methods */
void   equip_enchant_retain_answer__init
                     (EquipEnchantRetainAnswer         *message);
size_t equip_enchant_retain_answer__get_packed_size
                     (const EquipEnchantRetainAnswer   *message);
size_t equip_enchant_retain_answer__pack
                     (const EquipEnchantRetainAnswer   *message,
                      uint8_t             *out);
size_t equip_enchant_retain_answer__pack_to_buffer
                     (const EquipEnchantRetainAnswer   *message,
                      ProtobufCBuffer     *buffer);
EquipEnchantRetainAnswer *
       equip_enchant_retain_answer__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   equip_enchant_retain_answer__free_unpacked
                     (EquipEnchantRetainAnswer *message,
                      ProtobufCAllocator *allocator);
/* EquipDrillRequest methods */
void   equip_drill_request__init
                     (EquipDrillRequest         *message);
size_t equip_drill_request__get_packed_size
                     (const EquipDrillRequest   *message);
size_t equip_drill_request__pack
                     (const EquipDrillRequest   *message,
                      uint8_t             *out);
size_t equip_drill_request__pack_to_buffer
                     (const EquipDrillRequest   *message,
                      ProtobufCBuffer     *buffer);
EquipDrillRequest *
       equip_drill_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   equip_drill_request__free_unpacked
                     (EquipDrillRequest *message,
                      ProtobufCAllocator *allocator);
/* EquipDrillAnswer methods */
void   equip_drill_answer__init
                     (EquipDrillAnswer         *message);
size_t equip_drill_answer__get_packed_size
                     (const EquipDrillAnswer   *message);
size_t equip_drill_answer__pack
                     (const EquipDrillAnswer   *message,
                      uint8_t             *out);
size_t equip_drill_answer__pack_to_buffer
                     (const EquipDrillAnswer   *message,
                      ProtobufCBuffer     *buffer);
EquipDrillAnswer *
       equip_drill_answer__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   equip_drill_answer__free_unpacked
                     (EquipDrillAnswer *message,
                      ProtobufCAllocator *allocator);
/* EquipInlayRequest methods */
void   equip_inlay_request__init
                     (EquipInlayRequest         *message);
size_t equip_inlay_request__get_packed_size
                     (const EquipInlayRequest   *message);
size_t equip_inlay_request__pack
                     (const EquipInlayRequest   *message,
                      uint8_t             *out);
size_t equip_inlay_request__pack_to_buffer
                     (const EquipInlayRequest   *message,
                      ProtobufCBuffer     *buffer);
EquipInlayRequest *
       equip_inlay_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   equip_inlay_request__free_unpacked
                     (EquipInlayRequest *message,
                      ProtobufCAllocator *allocator);
/* EquipInlayAnswer methods */
void   equip_inlay_answer__init
                     (EquipInlayAnswer         *message);
size_t equip_inlay_answer__get_packed_size
                     (const EquipInlayAnswer   *message);
size_t equip_inlay_answer__pack
                     (const EquipInlayAnswer   *message,
                      uint8_t             *out);
size_t equip_inlay_answer__pack_to_buffer
                     (const EquipInlayAnswer   *message,
                      ProtobufCBuffer     *buffer);
EquipInlayAnswer *
       equip_inlay_answer__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   equip_inlay_answer__free_unpacked
                     (EquipInlayAnswer *message,
                      ProtobufCAllocator *allocator);
/* EquipStripRequest methods */
void   equip_strip_request__init
                     (EquipStripRequest         *message);
size_t equip_strip_request__get_packed_size
                     (const EquipStripRequest   *message);
size_t equip_strip_request__pack
                     (const EquipStripRequest   *message,
                      uint8_t             *out);
size_t equip_strip_request__pack_to_buffer
                     (const EquipStripRequest   *message,
                      ProtobufCBuffer     *buffer);
EquipStripRequest *
       equip_strip_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   equip_strip_request__free_unpacked
                     (EquipStripRequest *message,
                      ProtobufCAllocator *allocator);
/* EquipStripAnswer methods */
void   equip_strip_answer__init
                     (EquipStripAnswer         *message);
size_t equip_strip_answer__get_packed_size
                     (const EquipStripAnswer   *message);
size_t equip_strip_answer__pack
                     (const EquipStripAnswer   *message,
                      uint8_t             *out);
size_t equip_strip_answer__pack_to_buffer
                     (const EquipStripAnswer   *message,
                      ProtobufCBuffer     *buffer);
EquipStripAnswer *
       equip_strip_answer__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   equip_strip_answer__free_unpacked
                     (EquipStripAnswer *message,
                      ProtobufCAllocator *allocator);
/* EquipGemComposeRequest methods */
void   equip_gem_compose_request__init
                     (EquipGemComposeRequest         *message);
size_t equip_gem_compose_request__get_packed_size
                     (const EquipGemComposeRequest   *message);
size_t equip_gem_compose_request__pack
                     (const EquipGemComposeRequest   *message,
                      uint8_t             *out);
size_t equip_gem_compose_request__pack_to_buffer
                     (const EquipGemComposeRequest   *message,
                      ProtobufCBuffer     *buffer);
EquipGemComposeRequest *
       equip_gem_compose_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   equip_gem_compose_request__free_unpacked
                     (EquipGemComposeRequest *message,
                      ProtobufCAllocator *allocator);
/* EquipGemComposeAnswer methods */
void   equip_gem_compose_answer__init
                     (EquipGemComposeAnswer         *message);
size_t equip_gem_compose_answer__get_packed_size
                     (const EquipGemComposeAnswer   *message);
size_t equip_gem_compose_answer__pack
                     (const EquipGemComposeAnswer   *message,
                      uint8_t             *out);
size_t equip_gem_compose_answer__pack_to_buffer
                     (const EquipGemComposeAnswer   *message,
                      ProtobufCBuffer     *buffer);
EquipGemComposeAnswer *
       equip_gem_compose_answer__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   equip_gem_compose_answer__free_unpacked
                     (EquipGemComposeAnswer *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*EquipListAnswer_Closure)
                 (const EquipListAnswer *message,
                  void *closure_data);
typedef void (*EquipStarUpRequest_Closure)
                 (const EquipStarUpRequest *message,
                  void *closure_data);
typedef void (*EquipStarUpAnswer_Closure)
                 (const EquipStarUpAnswer *message,
                  void *closure_data);
typedef void (*EquipEnchantRequest_Closure)
                 (const EquipEnchantRequest *message,
                  void *closure_data);
typedef void (*EquipEnchantAnswer_Closure)
                 (const EquipEnchantAnswer *message,
                  void *closure_data);
typedef void (*EquipEnchantRetainRequest_Closure)
                 (const EquipEnchantRetainRequest *message,
                  void *closure_data);
typedef void (*EquipEnchantRetainAnswer_Closure)
                 (const EquipEnchantRetainAnswer *message,
                  void *closure_data);
typedef void (*EquipDrillRequest_Closure)
                 (const EquipDrillRequest *message,
                  void *closure_data);
typedef void (*EquipDrillAnswer_Closure)
                 (const EquipDrillAnswer *message,
                  void *closure_data);
typedef void (*EquipInlayRequest_Closure)
                 (const EquipInlayRequest *message,
                  void *closure_data);
typedef void (*EquipInlayAnswer_Closure)
                 (const EquipInlayAnswer *message,
                  void *closure_data);
typedef void (*EquipStripRequest_Closure)
                 (const EquipStripRequest *message,
                  void *closure_data);
typedef void (*EquipStripAnswer_Closure)
                 (const EquipStripAnswer *message,
                  void *closure_data);
typedef void (*EquipGemComposeRequest_Closure)
                 (const EquipGemComposeRequest *message,
                  void *closure_data);
typedef void (*EquipGemComposeAnswer_Closure)
                 (const EquipGemComposeAnswer *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor equip_list_answer__descriptor;
extern const ProtobufCMessageDescriptor equip_star_up_request__descriptor;
extern const ProtobufCMessageDescriptor equip_star_up_answer__descriptor;
extern const ProtobufCMessageDescriptor equip_enchant_request__descriptor;
extern const ProtobufCMessageDescriptor equip_enchant_answer__descriptor;
extern const ProtobufCMessageDescriptor equip_enchant_retain_request__descriptor;
extern const ProtobufCMessageDescriptor equip_enchant_retain_answer__descriptor;
extern const ProtobufCMessageDescriptor equip_drill_request__descriptor;
extern const ProtobufCMessageDescriptor equip_drill_answer__descriptor;
extern const ProtobufCMessageDescriptor equip_inlay_request__descriptor;
extern const ProtobufCMessageDescriptor equip_inlay_answer__descriptor;
extern const ProtobufCMessageDescriptor equip_strip_request__descriptor;
extern const ProtobufCMessageDescriptor equip_strip_answer__descriptor;
extern const ProtobufCMessageDescriptor equip_gem_compose_request__descriptor;
extern const ProtobufCMessageDescriptor equip_gem_compose_answer__descriptor;

PROTOBUF_C_END_DECLS


#endif  /* PROTOBUF_equip_2eproto__INCLUDED */
