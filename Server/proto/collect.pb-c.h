/* Generated by the protocol buffer compiler.  DO NOT EDIT! */

#ifndef PROTOBUF_C_collect_2eproto__INCLUDED
#define PROTOBUF_C_collect_2eproto__INCLUDED

#include <google/protobuf-c/protobuf-c.h>

PROTOBUF_C_BEGIN_DECLS


typedef struct _CollectId CollectId;
typedef struct _NotifyCollect NotifyCollect;
typedef struct _SingNotify SingNotify;
typedef struct _SingBeginRequest SingBeginRequest;


/* --- enums --- */

typedef enum _SingType {
  SING_TYPE__USE_PROP = 1,
  SING_TYPE__TRANSFER_SCENE = 2,
  SING_TYPE__TASK = 3,
  SING_TYPE__XUNBAO = 4
} SingType;

/* --- messages --- */

struct  _CollectId
{
  ProtobufCMessage base;
  uint32_t id;
};
#define COLLECT_ID__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&collect_id__descriptor) \
    , 0 }


struct  _NotifyCollect
{
  ProtobufCMessage base;
  uint64_t playerid;
  uint32_t collectid;
};
#define NOTIFY_COLLECT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&notify_collect__descriptor) \
    , 0, 0 }


struct  _SingNotify
{
  ProtobufCMessage base;
  uint64_t playerid;
  uint32_t singtype;
  uint32_t singtime;
};
#define SING_NOTIFY__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&sing_notify__descriptor) \
    , 0, 0, 0 }


struct  _SingBeginRequest
{
  ProtobufCMessage base;
  uint32_t type;
  uint32_t time;
};
#define SING_BEGIN_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&sing_begin_request__descriptor) \
    , 0, 0 }


/* CollectId methods */
void   collect_id__init
                     (CollectId         *message);
size_t collect_id__get_packed_size
                     (const CollectId   *message);
size_t collect_id__pack
                     (const CollectId   *message,
                      uint8_t             *out);
size_t collect_id__pack_to_buffer
                     (const CollectId   *message,
                      ProtobufCBuffer     *buffer);
CollectId *
       collect_id__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   collect_id__free_unpacked
                     (CollectId *message,
                      ProtobufCAllocator *allocator);
/* NotifyCollect methods */
void   notify_collect__init
                     (NotifyCollect         *message);
size_t notify_collect__get_packed_size
                     (const NotifyCollect   *message);
size_t notify_collect__pack
                     (const NotifyCollect   *message,
                      uint8_t             *out);
size_t notify_collect__pack_to_buffer
                     (const NotifyCollect   *message,
                      ProtobufCBuffer     *buffer);
NotifyCollect *
       notify_collect__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   notify_collect__free_unpacked
                     (NotifyCollect *message,
                      ProtobufCAllocator *allocator);
/* SingNotify methods */
void   sing_notify__init
                     (SingNotify         *message);
size_t sing_notify__get_packed_size
                     (const SingNotify   *message);
size_t sing_notify__pack
                     (const SingNotify   *message,
                      uint8_t             *out);
size_t sing_notify__pack_to_buffer
                     (const SingNotify   *message,
                      ProtobufCBuffer     *buffer);
SingNotify *
       sing_notify__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   sing_notify__free_unpacked
                     (SingNotify *message,
                      ProtobufCAllocator *allocator);
/* SingBeginRequest methods */
void   sing_begin_request__init
                     (SingBeginRequest         *message);
size_t sing_begin_request__get_packed_size
                     (const SingBeginRequest   *message);
size_t sing_begin_request__pack
                     (const SingBeginRequest   *message,
                      uint8_t             *out);
size_t sing_begin_request__pack_to_buffer
                     (const SingBeginRequest   *message,
                      ProtobufCBuffer     *buffer);
SingBeginRequest *
       sing_begin_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   sing_begin_request__free_unpacked
                     (SingBeginRequest *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*CollectId_Closure)
                 (const CollectId *message,
                  void *closure_data);
typedef void (*NotifyCollect_Closure)
                 (const NotifyCollect *message,
                  void *closure_data);
typedef void (*SingNotify_Closure)
                 (const SingNotify *message,
                  void *closure_data);
typedef void (*SingBeginRequest_Closure)
                 (const SingBeginRequest *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCEnumDescriptor    sing_type__descriptor;
extern const ProtobufCMessageDescriptor collect_id__descriptor;
extern const ProtobufCMessageDescriptor notify_collect__descriptor;
extern const ProtobufCMessageDescriptor sing_notify__descriptor;
extern const ProtobufCMessageDescriptor sing_begin_request__descriptor;

PROTOBUF_C_END_DECLS


#endif  /* PROTOBUF_collect_2eproto__INCLUDED */
