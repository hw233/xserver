/* Generated by the protocol buffer compiler.  DO NOT EDIT! */

#ifndef PROTOBUF_C_move_2eproto__INCLUDED
#define PROTOBUF_C_move_2eproto__INCLUDED

#include <google/protobuf-c/protobuf-c.h>

PROTOBUF_C_BEGIN_DECLS

#include "comm_message.pb-c.h"

typedef struct _MoveRequest MoveRequest;
typedef struct _MoveNotify MoveNotify;
typedef struct _SyncPlayerPosNotify SyncPlayerPosNotify;
typedef struct _SightPlayerBaseInfo SightPlayerBaseInfo;
typedef struct _SightMonsterInfo SightMonsterInfo;
typedef struct _PlayerOnCashTruckInfo PlayerOnCashTruckInfo;
typedef struct _SightCashTruckInfo SightCashTruckInfo;
typedef struct _SightCollectInfo SightCollectInfo;
typedef struct _SightNpcInfo SightNpcInfo;
typedef struct _SightTrapInfo SightTrapInfo;
typedef struct _SightPartnerInfo SightPartnerInfo;
typedef struct _SightChangedNotify SightChangedNotify;
typedef struct _SpecialMonsterPosNotify SpecialMonsterPosNotify;
typedef struct _SpecialPlayerPosNotify SpecialPlayerPosNotify;
typedef struct _SightPlayerInfoChangeNotify SightPlayerInfoChangeNotify;
typedef struct _SightMonsterIdChangeNotify SightMonsterIdChangeNotify;
typedef struct _MonsterTalkNotify MonsterTalkNotify;


/* --- enums --- */


/* --- messages --- */

struct  _MoveRequest
{
  ProtobufCMessage base;
  size_t n_data;
  PosData **data;
};
#define MOVE_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&move_request__descriptor) \
    , 0,NULL }


struct  _MoveNotify
{
  ProtobufCMessage base;
  uint64_t playerid;
  size_t n_data;
  PosData **data;
};
#define MOVE_NOTIFY__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&move_notify__descriptor) \
    , 0, 0,NULL }


struct  _SyncPlayerPosNotify
{
  ProtobufCMessage base;
  uint64_t player_id;
  float pos_x;
  float pos_z;
  uint32_t scene_id;
};
#define SYNC_PLAYER_POS_NOTIFY__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&sync_player_pos_notify__descriptor) \
    , 0, 0, 0, 0 }


struct  _SightPlayerBaseInfo
{
  ProtobufCMessage base;
  uint64_t playerid;
  size_t n_data;
  PosData **data;
  float pos_y;
  char *name;
  uint32_t lv;
  uint32_t job;
  uint32_t avatar;
  float direct_x;
  float direct_y;
  float direct_z;
  float speed;
  int32_t hp;
  uint32_t icon;
  uint32_t maxhp;
  uint32_t clothes;
  uint32_t clothes_color_up;
  uint32_t clothes_color_down;
  uint32_t hat;
  uint32_t hat_color;
  size_t n_buff_info;
  BuffInfo **buff_info;
  uint32_t team_id;
  uint32_t fashion_weapon;
  uint32_t horse;
  uint32_t pk_type;
  uint32_t region_id;
  uint32_t zhenying_id;
  uint32_t guild_id;
  uint32_t fashion_weapon_color;
};
#define SIGHT_PLAYER_BASE_INFO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&sight_player_base_info__descriptor) \
    , 0, 0,NULL, 0, NULL, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,NULL, 0, 0, 0, 0, 0, 0, 0, 0 }


struct  _SightMonsterInfo
{
  ProtobufCMessage base;
  uint64_t uuid;
  uint32_t monsterid;
  int32_t hp;
  size_t n_data;
  PosData **data;
  float speed;
  uint32_t lv;
  size_t n_buff_info;
  BuffInfo **buff_info;
  uint32_t pk_type;
  uint32_t zhenying_id;
  uint32_t effectid;
};
#define SIGHT_MONSTER_INFO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&sight_monster_info__descriptor) \
    , 0, 0, 0, 0,NULL, 0, 0, 0,NULL, 0, 0, 0 }


struct  _PlayerOnCashTruckInfo
{
  ProtobufCMessage base;
  uint64_t playerid;
  char *name;
  uint32_t lv;
  uint32_t job;
  uint32_t avatar;
  int32_t hp;
  uint32_t maxhp;
  uint32_t clothes;
  uint32_t clothes_color_up;
  uint32_t clothes_color_down;
  uint32_t hat;
  uint32_t hat_color;
  uint32_t team_id;
  uint32_t fashion_weapon;
  uint32_t pk_type;
  uint32_t region_id;
};
#define PLAYER_ON_CASH_TRUCK_INFO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&player_on_cash_truck_info__descriptor) \
    , 0, NULL, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }


struct  _SightCashTruckInfo
{
  ProtobufCMessage base;
  uint64_t uuid;
  uint32_t monsterid;
  int32_t hp;
  size_t n_data;
  PosData **data;
  float speed;
  uint32_t lv;
  size_t n_buff_info;
  BuffInfo **buff_info;
  uint32_t guild_id;
  uint64_t owner;
  char *owner_name;
  uint32_t team_id;
  uint32_t zhenying_id;
  uint32_t maxhp;
  float pos_y;
  uint32_t pk_type;
  float direct_x;
  float direct_z;
};
#define SIGHT_CASH_TRUCK_INFO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&sight_cash_truck_info__descriptor) \
    , 0, 0, 0, 0,NULL, 0, 0, 0,NULL, 0, 0, NULL, 0, 0, 0, 0, 0, 0, 0 }


struct  _SightCollectInfo
{
  ProtobufCMessage base;
  uint32_t uuid;
  uint32_t collectid;
  PosData *data;
  float y;
  float yaw;
};
#define SIGHT_COLLECT_INFO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&sight_collect_info__descriptor) \
    , 0, 0, NULL, 0, 0 }


struct  _SightNpcInfo
{
  ProtobufCMessage base;
  uint32_t npcid;
  PosData *data;
  uint32_t cd;
  float y;
};
#define SIGHT_NPC_INFO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&sight_npc_info__descriptor) \
    , 0, NULL, 0, 0 }


struct  _SightTrapInfo
{
  ProtobufCMessage base;
  uint64_t uuid;
  uint32_t monsterid;
  uint64_t owner;
};
#define SIGHT_TRAP_INFO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&sight_trap_info__descriptor) \
    , 0, 0, 0 }


struct  _SightPartnerInfo
{
  ProtobufCMessage base;
  uint64_t uuid;
  uint32_t partnerid;
  uint64_t owner;
  int32_t hp;
  size_t n_data;
  PosData **data;
  float speed;
  uint32_t lv;
  size_t n_buff_info;
  BuffInfo **buff_info;
  uint32_t pk_type;
  uint32_t zhenying_id;
  uint32_t maxhp;
};
#define SIGHT_PARTNER_INFO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&sight_partner_info__descriptor) \
    , 0, 0, 0, 0, 0,NULL, 0, 0, 0,NULL, 0, 0, 0 }


struct  _SightChangedNotify
{
  ProtobufCMessage base;
  size_t n_add_player;
  SightPlayerBaseInfo **add_player;
  size_t n_delete_player;
  uint64_t *delete_player;
  size_t n_add_monster;
  SightMonsterInfo **add_monster;
  size_t n_delete_monster;
  uint64_t *delete_monster;
  size_t n_add_trap;
  SightTrapInfo **add_trap;
  size_t n_delete_trap;
  uint64_t *delete_trap;
  size_t n_add_collect;
  SightCollectInfo **add_collect;
  size_t n_delete_collect;
  uint32_t *delete_collect;
  size_t n_add_cash_truck;
  SightCashTruckInfo **add_cash_truck;
  size_t n_delete_cash_truck;
  uint64_t *delete_cash_truck;
  size_t n_add_partner;
  SightPartnerInfo **add_partner;
  size_t n_delete_partner;
  uint64_t *delete_partner;
};
#define SIGHT_CHANGED_NOTIFY__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&sight_changed_notify__descriptor) \
    , 0,NULL, 0,NULL, 0,NULL, 0,NULL, 0,NULL, 0,NULL, 0,NULL, 0,NULL, 0,NULL, 0,NULL, 0,NULL, 0,NULL }


struct  _SpecialMonsterPosNotify
{
  ProtobufCMessage base;
  uint32_t monster_id;
  uint64_t uuid;
  uint32_t scene_id;
  int32_t pos_x;
  int32_t pos_z;
};
#define SPECIAL_MONSTER_POS_NOTIFY__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&special_monster_pos_notify__descriptor) \
    , 0, 0, 0, 0, 0 }


struct  _SpecialPlayerPosNotify
{
  ProtobufCMessage base;
  uint64_t uuid;
  uint32_t scene_id;
  int32_t pos_x;
  int32_t pos_z;
};
#define SPECIAL_PLAYER_POS_NOTIFY__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&special_player_pos_notify__descriptor) \
    , 0, 0, 0, 0 }


struct  _SightPlayerInfoChangeNotify
{
  ProtobufCMessage base;
  uint64_t player_id;
  protobuf_c_boolean has_guild_id;
  uint32_t guild_id;
};
#define SIGHT_PLAYER_INFO_CHANGE_NOTIFY__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&sight_player_info_change_notify__descriptor) \
    , 0, 0,0 }


struct  _SightMonsterIdChangeNotify
{
  ProtobufCMessage base;
  uint64_t uuid;
  uint32_t monster_id;
};
#define SIGHT_MONSTER_ID_CHANGE_NOTIFY__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&sight_monster_id_change_notify__descriptor) \
    , 0, 0 }


struct  _MonsterTalkNotify
{
  ProtobufCMessage base;
  uint64_t uuid;
  uint32_t talkid;
};
#define MONSTER_TALK_NOTIFY__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&monster_talk_notify__descriptor) \
    , 0, 0 }


/* MoveRequest methods */
void   move_request__init
                     (MoveRequest         *message);
size_t move_request__get_packed_size
                     (const MoveRequest   *message);
size_t move_request__pack
                     (const MoveRequest   *message,
                      uint8_t             *out);
size_t move_request__pack_to_buffer
                     (const MoveRequest   *message,
                      ProtobufCBuffer     *buffer);
MoveRequest *
       move_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   move_request__free_unpacked
                     (MoveRequest *message,
                      ProtobufCAllocator *allocator);
/* MoveNotify methods */
void   move_notify__init
                     (MoveNotify         *message);
size_t move_notify__get_packed_size
                     (const MoveNotify   *message);
size_t move_notify__pack
                     (const MoveNotify   *message,
                      uint8_t             *out);
size_t move_notify__pack_to_buffer
                     (const MoveNotify   *message,
                      ProtobufCBuffer     *buffer);
MoveNotify *
       move_notify__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   move_notify__free_unpacked
                     (MoveNotify *message,
                      ProtobufCAllocator *allocator);
/* SyncPlayerPosNotify methods */
void   sync_player_pos_notify__init
                     (SyncPlayerPosNotify         *message);
size_t sync_player_pos_notify__get_packed_size
                     (const SyncPlayerPosNotify   *message);
size_t sync_player_pos_notify__pack
                     (const SyncPlayerPosNotify   *message,
                      uint8_t             *out);
size_t sync_player_pos_notify__pack_to_buffer
                     (const SyncPlayerPosNotify   *message,
                      ProtobufCBuffer     *buffer);
SyncPlayerPosNotify *
       sync_player_pos_notify__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   sync_player_pos_notify__free_unpacked
                     (SyncPlayerPosNotify *message,
                      ProtobufCAllocator *allocator);
/* SightPlayerBaseInfo methods */
void   sight_player_base_info__init
                     (SightPlayerBaseInfo         *message);
size_t sight_player_base_info__get_packed_size
                     (const SightPlayerBaseInfo   *message);
size_t sight_player_base_info__pack
                     (const SightPlayerBaseInfo   *message,
                      uint8_t             *out);
size_t sight_player_base_info__pack_to_buffer
                     (const SightPlayerBaseInfo   *message,
                      ProtobufCBuffer     *buffer);
SightPlayerBaseInfo *
       sight_player_base_info__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   sight_player_base_info__free_unpacked
                     (SightPlayerBaseInfo *message,
                      ProtobufCAllocator *allocator);
/* SightMonsterInfo methods */
void   sight_monster_info__init
                     (SightMonsterInfo         *message);
size_t sight_monster_info__get_packed_size
                     (const SightMonsterInfo   *message);
size_t sight_monster_info__pack
                     (const SightMonsterInfo   *message,
                      uint8_t             *out);
size_t sight_monster_info__pack_to_buffer
                     (const SightMonsterInfo   *message,
                      ProtobufCBuffer     *buffer);
SightMonsterInfo *
       sight_monster_info__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   sight_monster_info__free_unpacked
                     (SightMonsterInfo *message,
                      ProtobufCAllocator *allocator);
/* PlayerOnCashTruckInfo methods */
void   player_on_cash_truck_info__init
                     (PlayerOnCashTruckInfo         *message);
size_t player_on_cash_truck_info__get_packed_size
                     (const PlayerOnCashTruckInfo   *message);
size_t player_on_cash_truck_info__pack
                     (const PlayerOnCashTruckInfo   *message,
                      uint8_t             *out);
size_t player_on_cash_truck_info__pack_to_buffer
                     (const PlayerOnCashTruckInfo   *message,
                      ProtobufCBuffer     *buffer);
PlayerOnCashTruckInfo *
       player_on_cash_truck_info__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   player_on_cash_truck_info__free_unpacked
                     (PlayerOnCashTruckInfo *message,
                      ProtobufCAllocator *allocator);
/* SightCashTruckInfo methods */
void   sight_cash_truck_info__init
                     (SightCashTruckInfo         *message);
size_t sight_cash_truck_info__get_packed_size
                     (const SightCashTruckInfo   *message);
size_t sight_cash_truck_info__pack
                     (const SightCashTruckInfo   *message,
                      uint8_t             *out);
size_t sight_cash_truck_info__pack_to_buffer
                     (const SightCashTruckInfo   *message,
                      ProtobufCBuffer     *buffer);
SightCashTruckInfo *
       sight_cash_truck_info__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   sight_cash_truck_info__free_unpacked
                     (SightCashTruckInfo *message,
                      ProtobufCAllocator *allocator);
/* SightCollectInfo methods */
void   sight_collect_info__init
                     (SightCollectInfo         *message);
size_t sight_collect_info__get_packed_size
                     (const SightCollectInfo   *message);
size_t sight_collect_info__pack
                     (const SightCollectInfo   *message,
                      uint8_t             *out);
size_t sight_collect_info__pack_to_buffer
                     (const SightCollectInfo   *message,
                      ProtobufCBuffer     *buffer);
SightCollectInfo *
       sight_collect_info__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   sight_collect_info__free_unpacked
                     (SightCollectInfo *message,
                      ProtobufCAllocator *allocator);
/* SightNpcInfo methods */
void   sight_npc_info__init
                     (SightNpcInfo         *message);
size_t sight_npc_info__get_packed_size
                     (const SightNpcInfo   *message);
size_t sight_npc_info__pack
                     (const SightNpcInfo   *message,
                      uint8_t             *out);
size_t sight_npc_info__pack_to_buffer
                     (const SightNpcInfo   *message,
                      ProtobufCBuffer     *buffer);
SightNpcInfo *
       sight_npc_info__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   sight_npc_info__free_unpacked
                     (SightNpcInfo *message,
                      ProtobufCAllocator *allocator);
/* SightTrapInfo methods */
void   sight_trap_info__init
                     (SightTrapInfo         *message);
size_t sight_trap_info__get_packed_size
                     (const SightTrapInfo   *message);
size_t sight_trap_info__pack
                     (const SightTrapInfo   *message,
                      uint8_t             *out);
size_t sight_trap_info__pack_to_buffer
                     (const SightTrapInfo   *message,
                      ProtobufCBuffer     *buffer);
SightTrapInfo *
       sight_trap_info__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   sight_trap_info__free_unpacked
                     (SightTrapInfo *message,
                      ProtobufCAllocator *allocator);
/* SightPartnerInfo methods */
void   sight_partner_info__init
                     (SightPartnerInfo         *message);
size_t sight_partner_info__get_packed_size
                     (const SightPartnerInfo   *message);
size_t sight_partner_info__pack
                     (const SightPartnerInfo   *message,
                      uint8_t             *out);
size_t sight_partner_info__pack_to_buffer
                     (const SightPartnerInfo   *message,
                      ProtobufCBuffer     *buffer);
SightPartnerInfo *
       sight_partner_info__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   sight_partner_info__free_unpacked
                     (SightPartnerInfo *message,
                      ProtobufCAllocator *allocator);
/* SightChangedNotify methods */
void   sight_changed_notify__init
                     (SightChangedNotify         *message);
size_t sight_changed_notify__get_packed_size
                     (const SightChangedNotify   *message);
size_t sight_changed_notify__pack
                     (const SightChangedNotify   *message,
                      uint8_t             *out);
size_t sight_changed_notify__pack_to_buffer
                     (const SightChangedNotify   *message,
                      ProtobufCBuffer     *buffer);
SightChangedNotify *
       sight_changed_notify__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   sight_changed_notify__free_unpacked
                     (SightChangedNotify *message,
                      ProtobufCAllocator *allocator);
/* SpecialMonsterPosNotify methods */
void   special_monster_pos_notify__init
                     (SpecialMonsterPosNotify         *message);
size_t special_monster_pos_notify__get_packed_size
                     (const SpecialMonsterPosNotify   *message);
size_t special_monster_pos_notify__pack
                     (const SpecialMonsterPosNotify   *message,
                      uint8_t             *out);
size_t special_monster_pos_notify__pack_to_buffer
                     (const SpecialMonsterPosNotify   *message,
                      ProtobufCBuffer     *buffer);
SpecialMonsterPosNotify *
       special_monster_pos_notify__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   special_monster_pos_notify__free_unpacked
                     (SpecialMonsterPosNotify *message,
                      ProtobufCAllocator *allocator);
/* SpecialPlayerPosNotify methods */
void   special_player_pos_notify__init
                     (SpecialPlayerPosNotify         *message);
size_t special_player_pos_notify__get_packed_size
                     (const SpecialPlayerPosNotify   *message);
size_t special_player_pos_notify__pack
                     (const SpecialPlayerPosNotify   *message,
                      uint8_t             *out);
size_t special_player_pos_notify__pack_to_buffer
                     (const SpecialPlayerPosNotify   *message,
                      ProtobufCBuffer     *buffer);
SpecialPlayerPosNotify *
       special_player_pos_notify__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   special_player_pos_notify__free_unpacked
                     (SpecialPlayerPosNotify *message,
                      ProtobufCAllocator *allocator);
/* SightPlayerInfoChangeNotify methods */
void   sight_player_info_change_notify__init
                     (SightPlayerInfoChangeNotify         *message);
size_t sight_player_info_change_notify__get_packed_size
                     (const SightPlayerInfoChangeNotify   *message);
size_t sight_player_info_change_notify__pack
                     (const SightPlayerInfoChangeNotify   *message,
                      uint8_t             *out);
size_t sight_player_info_change_notify__pack_to_buffer
                     (const SightPlayerInfoChangeNotify   *message,
                      ProtobufCBuffer     *buffer);
SightPlayerInfoChangeNotify *
       sight_player_info_change_notify__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   sight_player_info_change_notify__free_unpacked
                     (SightPlayerInfoChangeNotify *message,
                      ProtobufCAllocator *allocator);
/* SightMonsterIdChangeNotify methods */
void   sight_monster_id_change_notify__init
                     (SightMonsterIdChangeNotify         *message);
size_t sight_monster_id_change_notify__get_packed_size
                     (const SightMonsterIdChangeNotify   *message);
size_t sight_monster_id_change_notify__pack
                     (const SightMonsterIdChangeNotify   *message,
                      uint8_t             *out);
size_t sight_monster_id_change_notify__pack_to_buffer
                     (const SightMonsterIdChangeNotify   *message,
                      ProtobufCBuffer     *buffer);
SightMonsterIdChangeNotify *
       sight_monster_id_change_notify__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   sight_monster_id_change_notify__free_unpacked
                     (SightMonsterIdChangeNotify *message,
                      ProtobufCAllocator *allocator);
/* MonsterTalkNotify methods */
void   monster_talk_notify__init
                     (MonsterTalkNotify         *message);
size_t monster_talk_notify__get_packed_size
                     (const MonsterTalkNotify   *message);
size_t monster_talk_notify__pack
                     (const MonsterTalkNotify   *message,
                      uint8_t             *out);
size_t monster_talk_notify__pack_to_buffer
                     (const MonsterTalkNotify   *message,
                      ProtobufCBuffer     *buffer);
MonsterTalkNotify *
       monster_talk_notify__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   monster_talk_notify__free_unpacked
                     (MonsterTalkNotify *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*MoveRequest_Closure)
                 (const MoveRequest *message,
                  void *closure_data);
typedef void (*MoveNotify_Closure)
                 (const MoveNotify *message,
                  void *closure_data);
typedef void (*SyncPlayerPosNotify_Closure)
                 (const SyncPlayerPosNotify *message,
                  void *closure_data);
typedef void (*SightPlayerBaseInfo_Closure)
                 (const SightPlayerBaseInfo *message,
                  void *closure_data);
typedef void (*SightMonsterInfo_Closure)
                 (const SightMonsterInfo *message,
                  void *closure_data);
typedef void (*PlayerOnCashTruckInfo_Closure)
                 (const PlayerOnCashTruckInfo *message,
                  void *closure_data);
typedef void (*SightCashTruckInfo_Closure)
                 (const SightCashTruckInfo *message,
                  void *closure_data);
typedef void (*SightCollectInfo_Closure)
                 (const SightCollectInfo *message,
                  void *closure_data);
typedef void (*SightNpcInfo_Closure)
                 (const SightNpcInfo *message,
                  void *closure_data);
typedef void (*SightTrapInfo_Closure)
                 (const SightTrapInfo *message,
                  void *closure_data);
typedef void (*SightPartnerInfo_Closure)
                 (const SightPartnerInfo *message,
                  void *closure_data);
typedef void (*SightChangedNotify_Closure)
                 (const SightChangedNotify *message,
                  void *closure_data);
typedef void (*SpecialMonsterPosNotify_Closure)
                 (const SpecialMonsterPosNotify *message,
                  void *closure_data);
typedef void (*SpecialPlayerPosNotify_Closure)
                 (const SpecialPlayerPosNotify *message,
                  void *closure_data);
typedef void (*SightPlayerInfoChangeNotify_Closure)
                 (const SightPlayerInfoChangeNotify *message,
                  void *closure_data);
typedef void (*SightMonsterIdChangeNotify_Closure)
                 (const SightMonsterIdChangeNotify *message,
                  void *closure_data);
typedef void (*MonsterTalkNotify_Closure)
                 (const MonsterTalkNotify *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor move_request__descriptor;
extern const ProtobufCMessageDescriptor move_notify__descriptor;
extern const ProtobufCMessageDescriptor sync_player_pos_notify__descriptor;
extern const ProtobufCMessageDescriptor sight_player_base_info__descriptor;
extern const ProtobufCMessageDescriptor sight_monster_info__descriptor;
extern const ProtobufCMessageDescriptor player_on_cash_truck_info__descriptor;
extern const ProtobufCMessageDescriptor sight_cash_truck_info__descriptor;
extern const ProtobufCMessageDescriptor sight_collect_info__descriptor;
extern const ProtobufCMessageDescriptor sight_npc_info__descriptor;
extern const ProtobufCMessageDescriptor sight_trap_info__descriptor;
extern const ProtobufCMessageDescriptor sight_partner_info__descriptor;
extern const ProtobufCMessageDescriptor sight_changed_notify__descriptor;
extern const ProtobufCMessageDescriptor special_monster_pos_notify__descriptor;
extern const ProtobufCMessageDescriptor special_player_pos_notify__descriptor;
extern const ProtobufCMessageDescriptor sight_player_info_change_notify__descriptor;
extern const ProtobufCMessageDescriptor sight_monster_id_change_notify__descriptor;
extern const ProtobufCMessageDescriptor monster_talk_notify__descriptor;

PROTOBUF_C_END_DECLS


#endif  /* PROTOBUF_move_2eproto__INCLUDED */
