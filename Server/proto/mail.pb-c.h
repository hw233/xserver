/* Generated by the protocol buffer compiler.  DO NOT EDIT! */

#ifndef PROTOBUF_C_mail_2eproto__INCLUDED
#define PROTOBUF_C_mail_2eproto__INCLUDED

#include <google/protobuf-c/protobuf-c.h>

PROTOBUF_C_BEGIN_DECLS

#include "comm_message.pb-c.h"

typedef struct _MailCommRequest MailCommRequest;
typedef struct _MailCommAnswer MailCommAnswer;
typedef struct _MailListAnswer MailListAnswer;
typedef struct _MailMultiAnswer MailMultiAnswer;


/* --- enums --- */


/* --- messages --- */

struct  _MailCommRequest
{
  ProtobufCMessage base;
  uint64_t mail_id;
};
#define MAIL_COMM_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&mail_comm_request__descriptor) \
    , 0 }


struct  _MailCommAnswer
{
  ProtobufCMessage base;
  uint32_t result;
  uint64_t mail_id;
};
#define MAIL_COMM_ANSWER__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&mail_comm_answer__descriptor) \
    , 0, 0 }


struct  _MailListAnswer
{
  ProtobufCMessage base;
  uint32_t result;
  size_t n_mails;
  MailData **mails;
};
#define MAIL_LIST_ANSWER__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&mail_list_answer__descriptor) \
    , 0, 0,NULL }


struct  _MailMultiAnswer
{
  ProtobufCMessage base;
  uint32_t result;
  size_t n_mail_id;
  uint64_t *mail_id;
};
#define MAIL_MULTI_ANSWER__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&mail_multi_answer__descriptor) \
    , 0, 0,NULL }


/* MailCommRequest methods */
void   mail_comm_request__init
                     (MailCommRequest         *message);
size_t mail_comm_request__get_packed_size
                     (const MailCommRequest   *message);
size_t mail_comm_request__pack
                     (const MailCommRequest   *message,
                      uint8_t             *out);
size_t mail_comm_request__pack_to_buffer
                     (const MailCommRequest   *message,
                      ProtobufCBuffer     *buffer);
MailCommRequest *
       mail_comm_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   mail_comm_request__free_unpacked
                     (MailCommRequest *message,
                      ProtobufCAllocator *allocator);
/* MailCommAnswer methods */
void   mail_comm_answer__init
                     (MailCommAnswer         *message);
size_t mail_comm_answer__get_packed_size
                     (const MailCommAnswer   *message);
size_t mail_comm_answer__pack
                     (const MailCommAnswer   *message,
                      uint8_t             *out);
size_t mail_comm_answer__pack_to_buffer
                     (const MailCommAnswer   *message,
                      ProtobufCBuffer     *buffer);
MailCommAnswer *
       mail_comm_answer__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   mail_comm_answer__free_unpacked
                     (MailCommAnswer *message,
                      ProtobufCAllocator *allocator);
/* MailListAnswer methods */
void   mail_list_answer__init
                     (MailListAnswer         *message);
size_t mail_list_answer__get_packed_size
                     (const MailListAnswer   *message);
size_t mail_list_answer__pack
                     (const MailListAnswer   *message,
                      uint8_t             *out);
size_t mail_list_answer__pack_to_buffer
                     (const MailListAnswer   *message,
                      ProtobufCBuffer     *buffer);
MailListAnswer *
       mail_list_answer__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   mail_list_answer__free_unpacked
                     (MailListAnswer *message,
                      ProtobufCAllocator *allocator);
/* MailMultiAnswer methods */
void   mail_multi_answer__init
                     (MailMultiAnswer         *message);
size_t mail_multi_answer__get_packed_size
                     (const MailMultiAnswer   *message);
size_t mail_multi_answer__pack
                     (const MailMultiAnswer   *message,
                      uint8_t             *out);
size_t mail_multi_answer__pack_to_buffer
                     (const MailMultiAnswer   *message,
                      ProtobufCBuffer     *buffer);
MailMultiAnswer *
       mail_multi_answer__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   mail_multi_answer__free_unpacked
                     (MailMultiAnswer *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*MailCommRequest_Closure)
                 (const MailCommRequest *message,
                  void *closure_data);
typedef void (*MailCommAnswer_Closure)
                 (const MailCommAnswer *message,
                  void *closure_data);
typedef void (*MailListAnswer_Closure)
                 (const MailListAnswer *message,
                  void *closure_data);
typedef void (*MailMultiAnswer_Closure)
                 (const MailMultiAnswer *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor mail_comm_request__descriptor;
extern const ProtobufCMessageDescriptor mail_comm_answer__descriptor;
extern const ProtobufCMessageDescriptor mail_list_answer__descriptor;
extern const ProtobufCMessageDescriptor mail_multi_answer__descriptor;

PROTOBUF_C_END_DECLS


#endif  /* PROTOBUF_mail_2eproto__INCLUDED */
