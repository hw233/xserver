/* Generated by the protocol buffer compiler.  DO NOT EDIT! */

#ifndef PROTOBUF_C_login_2eproto__INCLUDED
#define PROTOBUF_C_login_2eproto__INCLUDED

#include <google/protobuf-c/protobuf-c.h>

PROTOBUF_C_BEGIN_DECLS

#include "comm_message.pb-c.h"

typedef struct _LoginRequest LoginRequest;
typedef struct _LoginAnswer LoginAnswer;
typedef struct _PlayerListAnswer PlayerListAnswer;
typedef struct _PlayerCreateRequest PlayerCreateRequest;
typedef struct _PlayerCreateAnswer PlayerCreateAnswer;
typedef struct _EnterGameRequest EnterGameRequest;
typedef struct _EnterGameAnswer EnterGameAnswer;
typedef struct _HeartbeatNotify HeartbeatNotify;


/* --- enums --- */


/* --- messages --- */

struct  _LoginRequest
{
  ProtobufCMessage base;
  int32_t channel;
  char *openid;
  char *key;
};
#define LOGIN_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&login_request__descriptor) \
    , 0, NULL, NULL }


struct  _LoginAnswer
{
  ProtobufCMessage base;
  uint32_t result;
  uint32_t openid;
};
#define LOGIN_ANSWER__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&login_answer__descriptor) \
    , 0, 0 }


struct  _PlayerListAnswer
{
  ProtobufCMessage base;
  uint32_t result;
  size_t n_playerlist;
  PlayerBaseInfo **playerlist;
};
#define PLAYER_LIST_ANSWER__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&player_list_answer__descriptor) \
    , 0, 0,NULL }


struct  _PlayerCreateRequest
{
  ProtobufCMessage base;
  char *name;
  uint32_t job;
};
#define PLAYER_CREATE_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&player_create_request__descriptor) \
    , NULL, 0 }


struct  _PlayerCreateAnswer
{
  ProtobufCMessage base;
  uint32_t result;
  PlayerBaseInfo *playerlist;
};
#define PLAYER_CREATE_ANSWER__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&player_create_answer__descriptor) \
    , 0, NULL }


struct  _EnterGameRequest
{
  ProtobufCMessage base;
  uint64_t playerid;
  uint32_t reconnect;
};
#define ENTER_GAME_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&enter_game_request__descriptor) \
    , 0, 0 }


struct  _EnterGameAnswer
{
  ProtobufCMessage base;
  uint32_t result;
  float posx;
  float posz;
  uint32_t sceneid;
  uint32_t curtime;
  int32_t posy;
  uint32_t curhorse;
  uint32_t curhorsestate;
  int32_t fly;
  int32_t direct;
};
#define ENTER_GAME_ANSWER__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&enter_game_answer__descriptor) \
    , 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }


struct  _HeartbeatNotify
{
  ProtobufCMessage base;
  uint32_t curtime;
};
#define HEARTBEAT_NOTIFY__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&heartbeat_notify__descriptor) \
    , 0 }


/* LoginRequest methods */
void   login_request__init
                     (LoginRequest         *message);
size_t login_request__get_packed_size
                     (const LoginRequest   *message);
size_t login_request__pack
                     (const LoginRequest   *message,
                      uint8_t             *out);
size_t login_request__pack_to_buffer
                     (const LoginRequest   *message,
                      ProtobufCBuffer     *buffer);
LoginRequest *
       login_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   login_request__free_unpacked
                     (LoginRequest *message,
                      ProtobufCAllocator *allocator);
/* LoginAnswer methods */
void   login_answer__init
                     (LoginAnswer         *message);
size_t login_answer__get_packed_size
                     (const LoginAnswer   *message);
size_t login_answer__pack
                     (const LoginAnswer   *message,
                      uint8_t             *out);
size_t login_answer__pack_to_buffer
                     (const LoginAnswer   *message,
                      ProtobufCBuffer     *buffer);
LoginAnswer *
       login_answer__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   login_answer__free_unpacked
                     (LoginAnswer *message,
                      ProtobufCAllocator *allocator);
/* PlayerListAnswer methods */
void   player_list_answer__init
                     (PlayerListAnswer         *message);
size_t player_list_answer__get_packed_size
                     (const PlayerListAnswer   *message);
size_t player_list_answer__pack
                     (const PlayerListAnswer   *message,
                      uint8_t             *out);
size_t player_list_answer__pack_to_buffer
                     (const PlayerListAnswer   *message,
                      ProtobufCBuffer     *buffer);
PlayerListAnswer *
       player_list_answer__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   player_list_answer__free_unpacked
                     (PlayerListAnswer *message,
                      ProtobufCAllocator *allocator);
/* PlayerCreateRequest methods */
void   player_create_request__init
                     (PlayerCreateRequest         *message);
size_t player_create_request__get_packed_size
                     (const PlayerCreateRequest   *message);
size_t player_create_request__pack
                     (const PlayerCreateRequest   *message,
                      uint8_t             *out);
size_t player_create_request__pack_to_buffer
                     (const PlayerCreateRequest   *message,
                      ProtobufCBuffer     *buffer);
PlayerCreateRequest *
       player_create_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   player_create_request__free_unpacked
                     (PlayerCreateRequest *message,
                      ProtobufCAllocator *allocator);
/* PlayerCreateAnswer methods */
void   player_create_answer__init
                     (PlayerCreateAnswer         *message);
size_t player_create_answer__get_packed_size
                     (const PlayerCreateAnswer   *message);
size_t player_create_answer__pack
                     (const PlayerCreateAnswer   *message,
                      uint8_t             *out);
size_t player_create_answer__pack_to_buffer
                     (const PlayerCreateAnswer   *message,
                      ProtobufCBuffer     *buffer);
PlayerCreateAnswer *
       player_create_answer__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   player_create_answer__free_unpacked
                     (PlayerCreateAnswer *message,
                      ProtobufCAllocator *allocator);
/* EnterGameRequest methods */
void   enter_game_request__init
                     (EnterGameRequest         *message);
size_t enter_game_request__get_packed_size
                     (const EnterGameRequest   *message);
size_t enter_game_request__pack
                     (const EnterGameRequest   *message,
                      uint8_t             *out);
size_t enter_game_request__pack_to_buffer
                     (const EnterGameRequest   *message,
                      ProtobufCBuffer     *buffer);
EnterGameRequest *
       enter_game_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   enter_game_request__free_unpacked
                     (EnterGameRequest *message,
                      ProtobufCAllocator *allocator);
/* EnterGameAnswer methods */
void   enter_game_answer__init
                     (EnterGameAnswer         *message);
size_t enter_game_answer__get_packed_size
                     (const EnterGameAnswer   *message);
size_t enter_game_answer__pack
                     (const EnterGameAnswer   *message,
                      uint8_t             *out);
size_t enter_game_answer__pack_to_buffer
                     (const EnterGameAnswer   *message,
                      ProtobufCBuffer     *buffer);
EnterGameAnswer *
       enter_game_answer__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   enter_game_answer__free_unpacked
                     (EnterGameAnswer *message,
                      ProtobufCAllocator *allocator);
/* HeartbeatNotify methods */
void   heartbeat_notify__init
                     (HeartbeatNotify         *message);
size_t heartbeat_notify__get_packed_size
                     (const HeartbeatNotify   *message);
size_t heartbeat_notify__pack
                     (const HeartbeatNotify   *message,
                      uint8_t             *out);
size_t heartbeat_notify__pack_to_buffer
                     (const HeartbeatNotify   *message,
                      ProtobufCBuffer     *buffer);
HeartbeatNotify *
       heartbeat_notify__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   heartbeat_notify__free_unpacked
                     (HeartbeatNotify *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*LoginRequest_Closure)
                 (const LoginRequest *message,
                  void *closure_data);
typedef void (*LoginAnswer_Closure)
                 (const LoginAnswer *message,
                  void *closure_data);
typedef void (*PlayerListAnswer_Closure)
                 (const PlayerListAnswer *message,
                  void *closure_data);
typedef void (*PlayerCreateRequest_Closure)
                 (const PlayerCreateRequest *message,
                  void *closure_data);
typedef void (*PlayerCreateAnswer_Closure)
                 (const PlayerCreateAnswer *message,
                  void *closure_data);
typedef void (*EnterGameRequest_Closure)
                 (const EnterGameRequest *message,
                  void *closure_data);
typedef void (*EnterGameAnswer_Closure)
                 (const EnterGameAnswer *message,
                  void *closure_data);
typedef void (*HeartbeatNotify_Closure)
                 (const HeartbeatNotify *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor login_request__descriptor;
extern const ProtobufCMessageDescriptor login_answer__descriptor;
extern const ProtobufCMessageDescriptor player_list_answer__descriptor;
extern const ProtobufCMessageDescriptor player_create_request__descriptor;
extern const ProtobufCMessageDescriptor player_create_answer__descriptor;
extern const ProtobufCMessageDescriptor enter_game_request__descriptor;
extern const ProtobufCMessageDescriptor enter_game_answer__descriptor;
extern const ProtobufCMessageDescriptor heartbeat_notify__descriptor;

PROTOBUF_C_END_DECLS


#endif  /* PROTOBUF_login_2eproto__INCLUDED */
