/* Generated by the protocol buffer compiler.  DO NOT EDIT! */

#ifndef PROTOBUF_C_mail_5fdb_2eproto__INCLUDED
#define PROTOBUF_C_mail_5fdb_2eproto__INCLUDED

#include <google/protobuf-c/protobuf-c.h>

PROTOBUF_C_BEGIN_DECLS


typedef struct _MailAttach MailAttach;
typedef struct _MailAttachGiveInfo MailAttachGiveInfo;
typedef struct _MailGiveAttachRequest MailGiveAttachRequest;
typedef struct _MailGiveAttachAnswer MailGiveAttachAnswer;
typedef struct _MailDBInfo MailDBInfo;


/* --- enums --- */


/* --- messages --- */

struct  _MailAttach
{
  ProtobufCMessage base;
  uint32_t id;
  uint32_t num;
};
#define MAIL_ATTACH__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&mail_attach__descriptor) \
    , 0, 0 }


struct  _MailAttachGiveInfo
{
  ProtobufCMessage base;
  uint64_t mailid;
  uint32_t statisid;
  size_t n_attachs;
  MailAttach **attachs;
};
#define MAIL_ATTACH_GIVE_INFO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&mail_attach_give_info__descriptor) \
    , 0, 0, 0,NULL }


struct  _MailGiveAttachRequest
{
  ProtobufCMessage base;
  size_t n_mails;
  MailAttachGiveInfo **mails;
};
#define MAIL_GIVE_ATTACH_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&mail_give_attach_request__descriptor) \
    , 0,NULL }


struct  _MailGiveAttachAnswer
{
  ProtobufCMessage base;
  size_t n_successids;
  uint64_t *successids;
  size_t n_failids;
  uint64_t *failids;
};
#define MAIL_GIVE_ATTACH_ANSWER__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&mail_give_attach_answer__descriptor) \
    , 0,NULL, 0,NULL }


struct  _MailDBInfo
{
  ProtobufCMessage base;
  uint32_t type;
  char *title;
  char *sendername;
  char *content;
  size_t n_args;
  char **args;
  size_t n_attach;
  MailAttach **attach;
  uint32_t statisid;
};
#define MAIL_DBINFO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&mail_dbinfo__descriptor) \
    , 0, NULL, NULL, NULL, 0,NULL, 0,NULL, 0 }


/* MailAttach methods */
void   mail_attach__init
                     (MailAttach         *message);
size_t mail_attach__get_packed_size
                     (const MailAttach   *message);
size_t mail_attach__pack
                     (const MailAttach   *message,
                      uint8_t             *out);
size_t mail_attach__pack_to_buffer
                     (const MailAttach   *message,
                      ProtobufCBuffer     *buffer);
MailAttach *
       mail_attach__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   mail_attach__free_unpacked
                     (MailAttach *message,
                      ProtobufCAllocator *allocator);
/* MailAttachGiveInfo methods */
void   mail_attach_give_info__init
                     (MailAttachGiveInfo         *message);
size_t mail_attach_give_info__get_packed_size
                     (const MailAttachGiveInfo   *message);
size_t mail_attach_give_info__pack
                     (const MailAttachGiveInfo   *message,
                      uint8_t             *out);
size_t mail_attach_give_info__pack_to_buffer
                     (const MailAttachGiveInfo   *message,
                      ProtobufCBuffer     *buffer);
MailAttachGiveInfo *
       mail_attach_give_info__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   mail_attach_give_info__free_unpacked
                     (MailAttachGiveInfo *message,
                      ProtobufCAllocator *allocator);
/* MailGiveAttachRequest methods */
void   mail_give_attach_request__init
                     (MailGiveAttachRequest         *message);
size_t mail_give_attach_request__get_packed_size
                     (const MailGiveAttachRequest   *message);
size_t mail_give_attach_request__pack
                     (const MailGiveAttachRequest   *message,
                      uint8_t             *out);
size_t mail_give_attach_request__pack_to_buffer
                     (const MailGiveAttachRequest   *message,
                      ProtobufCBuffer     *buffer);
MailGiveAttachRequest *
       mail_give_attach_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   mail_give_attach_request__free_unpacked
                     (MailGiveAttachRequest *message,
                      ProtobufCAllocator *allocator);
/* MailGiveAttachAnswer methods */
void   mail_give_attach_answer__init
                     (MailGiveAttachAnswer         *message);
size_t mail_give_attach_answer__get_packed_size
                     (const MailGiveAttachAnswer   *message);
size_t mail_give_attach_answer__pack
                     (const MailGiveAttachAnswer   *message,
                      uint8_t             *out);
size_t mail_give_attach_answer__pack_to_buffer
                     (const MailGiveAttachAnswer   *message,
                      ProtobufCBuffer     *buffer);
MailGiveAttachAnswer *
       mail_give_attach_answer__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   mail_give_attach_answer__free_unpacked
                     (MailGiveAttachAnswer *message,
                      ProtobufCAllocator *allocator);
/* MailDBInfo methods */
void   mail_dbinfo__init
                     (MailDBInfo         *message);
size_t mail_dbinfo__get_packed_size
                     (const MailDBInfo   *message);
size_t mail_dbinfo__pack
                     (const MailDBInfo   *message,
                      uint8_t             *out);
size_t mail_dbinfo__pack_to_buffer
                     (const MailDBInfo   *message,
                      ProtobufCBuffer     *buffer);
MailDBInfo *
       mail_dbinfo__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   mail_dbinfo__free_unpacked
                     (MailDBInfo *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*MailAttach_Closure)
                 (const MailAttach *message,
                  void *closure_data);
typedef void (*MailAttachGiveInfo_Closure)
                 (const MailAttachGiveInfo *message,
                  void *closure_data);
typedef void (*MailGiveAttachRequest_Closure)
                 (const MailGiveAttachRequest *message,
                  void *closure_data);
typedef void (*MailGiveAttachAnswer_Closure)
                 (const MailGiveAttachAnswer *message,
                  void *closure_data);
typedef void (*MailDBInfo_Closure)
                 (const MailDBInfo *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor mail_attach__descriptor;
extern const ProtobufCMessageDescriptor mail_attach_give_info__descriptor;
extern const ProtobufCMessageDescriptor mail_give_attach_request__descriptor;
extern const ProtobufCMessageDescriptor mail_give_attach_answer__descriptor;
extern const ProtobufCMessageDescriptor mail_dbinfo__descriptor;

PROTOBUF_C_END_DECLS


#endif  /* PROTOBUF_mail_5fdb_2eproto__INCLUDED */
