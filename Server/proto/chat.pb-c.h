/* Generated by the protocol buffer compiler.  DO NOT EDIT! */

#ifndef PROTOBUF_C_chat_2eproto__INCLUDED
#define PROTOBUF_C_chat_2eproto__INCLUDED

#include <google/protobuf-c/protobuf-c.h>

PROTOBUF_C_BEGIN_DECLS


typedef struct _Chat Chat;
typedef struct _ChatHorse ChatHorse;
typedef struct _AnsChat AnsChat;


/* --- enums --- */

typedef enum _Channel {
  CHANNEL__world = 1,
  CHANNEL__zhaomu = 2,
  CHANNEL__private = 3,
  CHANNEL__team = 4,
  CHANNEL__family = 5,
  CHANNEL__menpai = 6,
  CHANNEL__area = 7,
  CHANNEL__system = 8,
  CHANNEL__group = 9
} Channel;
typedef enum _CharRetCode {
  CHAR_RET_CODE__success = 0,
  CHAR_RET_CODE__offLine = 1,
  CHAR_RET_CODE__noTeam = 2,
  CHAR_RET_CODE__noGuild = 3
} CharRetCode;
typedef enum _ChatBroadcastType {
  CHAT_BROADCAST_TYPE__ITEM = 1,
  CHAT_BROADCAST_TYPE__MONEY = 2
} ChatBroadcastType;

/* --- messages --- */

struct  _Chat
{
  ProtobufCMessage base;
  int32_t channel;
  char *contain;
  char *sendname;
  uint64_t sendplayerid;
  uint32_t sendplayerlv;
  uint32_t sendplayerjob;
  protobuf_c_boolean has_recvplayerid;
  uint64_t recvplayerid;
  char *guild;
  protobuf_c_boolean has_sendplayerpicture;
  uint32_t sendplayerpicture;
  protobuf_c_boolean has_costtype;
  uint32_t costtype;
  char *url;
  protobuf_c_boolean has_time_stamp;
  uint32_t time_stamp;
  char *tanslation;
  protobuf_c_boolean has_sendtime;
  uint32_t sendtime;
};
#define CHAT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&chat__descriptor) \
    , 0, NULL, NULL, 0, 0, 0, 0,0, NULL, 0,0, 0,0, NULL, 0,0, NULL, 0,0 }


struct  _ChatHorse
{
  ProtobufCMessage base;
  uint32_t id;
  uint32_t prior;
  char *content;
};
#define CHAT_HORSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&chat_horse__descriptor) \
    , 0, 0, NULL }


struct  _AnsChat
{
  ProtobufCMessage base;
  uint32_t ret;
  uint32_t cd;
};
#define ANS_CHAT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&ans_chat__descriptor) \
    , 0, 0 }


/* Chat methods */
void   chat__init
                     (Chat         *message);
size_t chat__get_packed_size
                     (const Chat   *message);
size_t chat__pack
                     (const Chat   *message,
                      uint8_t             *out);
size_t chat__pack_to_buffer
                     (const Chat   *message,
                      ProtobufCBuffer     *buffer);
Chat *
       chat__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   chat__free_unpacked
                     (Chat *message,
                      ProtobufCAllocator *allocator);
/* ChatHorse methods */
void   chat_horse__init
                     (ChatHorse         *message);
size_t chat_horse__get_packed_size
                     (const ChatHorse   *message);
size_t chat_horse__pack
                     (const ChatHorse   *message,
                      uint8_t             *out);
size_t chat_horse__pack_to_buffer
                     (const ChatHorse   *message,
                      ProtobufCBuffer     *buffer);
ChatHorse *
       chat_horse__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   chat_horse__free_unpacked
                     (ChatHorse *message,
                      ProtobufCAllocator *allocator);
/* AnsChat methods */
void   ans_chat__init
                     (AnsChat         *message);
size_t ans_chat__get_packed_size
                     (const AnsChat   *message);
size_t ans_chat__pack
                     (const AnsChat   *message,
                      uint8_t             *out);
size_t ans_chat__pack_to_buffer
                     (const AnsChat   *message,
                      ProtobufCBuffer     *buffer);
AnsChat *
       ans_chat__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   ans_chat__free_unpacked
                     (AnsChat *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Chat_Closure)
                 (const Chat *message,
                  void *closure_data);
typedef void (*ChatHorse_Closure)
                 (const ChatHorse *message,
                  void *closure_data);
typedef void (*AnsChat_Closure)
                 (const AnsChat *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCEnumDescriptor    channel__descriptor;
extern const ProtobufCEnumDescriptor    char_ret_code__descriptor;
extern const ProtobufCEnumDescriptor    chat_broadcast_type__descriptor;
extern const ProtobufCMessageDescriptor chat__descriptor;
extern const ProtobufCMessageDescriptor chat_horse__descriptor;
extern const ProtobufCMessageDescriptor ans_chat__descriptor;

PROTOBUF_C_END_DECLS


#endif  /* PROTOBUF_chat_2eproto__INCLUDED */
